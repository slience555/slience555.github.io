<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Akesu</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-03-24T03:29:43.442Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Akesu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>消息初步分析</title>
    <link href="http://example.com/%E6%B6%88%E6%81%AF%E5%88%9D%E6%AD%A5%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/%E6%B6%88%E6%81%AF%E5%88%9D%E6%AD%A5%E5%88%86%E6%9E%90/</id>
    <published>2021-03-24T03:29:41.551Z</published>
    <updated>2021-03-24T03:29:43.442Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-AddBalance"><a href="#1-AddBalance" class="headerlink" title="1.AddBalance"></a>1.AddBalance</h3><p>接收方均为f05，消息发送方给f05转账</p><h4 id="目的描述："><a href="#目的描述：" class="headerlink" title="目的描述："></a>目的描述：</h4><p>将收到的值存入托管的余额中。</p><h4 id="官方代码注解"><a href="#官方代码注解" class="headerlink" title="官方代码注解"></a>官方代码注解</h4><blockquote><p>// Deposits the received value into the balance held in escrow.</p><p>将收到的值存入托管的余额中。</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"><span class="string">&quot;f01287&quot;</span><span class="comment">//消息发送方的矿工地址   </span></span><br><span class="line"><span class="comment">//在最初的版本，第一条此类型的消息参数值是发送方的地址，后面几乎均为矿工</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>该参数为字符串解析后为字符串 可通过全节点接口 StateDecodeParams 直接解析参数,后续消息参数也可使用该接口解析，不过返回的类型是interface{}</p></blockquote><p>消息的value为转账给f05的金额</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="2-AddLockedFund"><a href="#2-AddLockedFund" class="headerlink" title="2.AddLockedFund"></a>2.AddLockedFund</h3><p>普通账户给其账户下的矿工发送的消息，增加锁仓金额</p><h4 id="目的描述：-1"><a href="#目的描述：-1" class="headerlink" title="目的描述："></a>目的描述：</h4><p>锁定矿工的未锁定余额（包括与调用消息一起收到的资金）。</p><h4 id="官方代码注解："><a href="#官方代码注解：" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>// Locks up some amount of the miner’s unlocked balance (including funds received alongside the invoking message).</p><p>锁定矿工的未锁定余额（包括与调用消息一起收到的资金）。</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"><span class="string">&quot;12000000000000000000&quot;</span><span class="comment">//消息的value值   （字符串，不是结构体）</span></span><br></pre></td></tr></table></figure><blockquote><p>该参数为字符串解析后为字符串 可通过全节点接口 StateDecodeParams 直接解析参数</p></blockquote><p>消息的value为转账给其账户下的矿工的金额</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="3-AddVerifiedClient"><a href="#3-AddVerifiedClient" class="headerlink" title="3.AddVerifiedClient"></a>3.AddVerifiedClient</h3><p>接收方均为f06，（注册确认）</p><h4 id="目的描述：-2"><a href="#目的描述：-2" class="headerlink" title="目的描述："></a>目的描述：</h4><p>增加经过验证的客户。</p><blockquote><p>To further incentivize the storage of “useful” data over simple capacity commitments, storage miners have the additional opportunity to compete for special deals offered by verified clients. Such clients are certified with respect to their intent to offer deals involving the storage of meaningful data, and the power a storage miner earns for these deals is augmented by a multiplier.</p><p>为了通过简单的容量承诺进一步激励“有用”数据的存储，存储矿工有额外的机会竞争经过验证的客户提供的特殊交易。此类客户在提供涉及存储有意义数据的交易意图方面获得了认证，并且乘以乘数可以增强存储矿工为这些交易赚取的权力。</p></blockquote><h4 id="官方代码注解：-1"><a href="#官方代码注解：-1" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>// The caller will be verified by checking the verifiers table below.</p><p>// Validate caller is one of the verifiers.</p><p>// Validate client to be added isn’t a verifier</p><p>// Compute new verifier cap and update.</p><p>// This is a one-time, upfront allocation.<br>       // This allowance cannot be changed by calls to AddVerifiedClient as long as the client has not been removed.<br>       // If parties need more allowance, they need to create a new verified client or use up the the current allowance<br>       // and then create a new verified client.</p><p>1.通过检查下面的验证程序表，可以验证呼叫者。<br>2.验证调用者是验证者之一。<br>3.验证要添加的客户端不是验证者<br>4.计算新的验证者上限并更新<br>5.这是一次性的前期分配。只要没有删除客户端，就不能通过调用AddVerifiedClient来更改此限额。如果各方需要更多的配额，则需要创建一个新的经过验证的客户或用完当前的配额,然后创建一个新的经过验证的客户端。</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">&#123;</span><br><span class="line">          <span class="string">&quot;Address&quot;</span>:<span class="string">&quot;f3ulwcfkdp7cqtvyfrfigr6yjmpil5bpas2w7q5iw7ck4dlmuquybvwnbct3yhfjmdbkj7xjdiblhmxgwg5yqq&quot;</span>,</span><br><span class="line">          <span class="string">&quot;Allowance&quot;</span>: <span class="string">&quot;8589934592&quot;</span> <span class="comment">//津贴</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消息解析：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">消息参数对应结构体</span><br><span class="line"><span class="keyword">type</span> AddVerifiedClientParams <span class="keyword">struct</span> &#123;</span><br><span class="line">Address   addr.Address</span><br><span class="line">Allowance DataCap</span><br><span class="line">&#125; </span><br><span class="line">解参eg:</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeAddVerifiedClient</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzaceciqezv7ijf24ncawtlv7ulyqeegdssw3xrphmm2nsgxgvauljbl2&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc verifreg.AddVerifiedClientParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="4-Approve"><a href="#4-Approve" class="headerlink" title="4.Approve"></a>4.Approve</h3><h4 id="目的描述：-3"><a href="#目的描述：-3" class="headerlink" title="目的描述："></a>目的描述：</h4><p>批准多重签名交易</p><h4 id="官方代码注解：-2"><a href="#官方代码注解：-2" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>Approve a multisig transaction. The “hash” is optional.</p><p>批准多重签名交易。 “哈希”是可选的</p><p>// if the transaction already has enough approvers, execute it without “processing” this approval.</p><p>//如果交易已经有足够的批准者，则执行该交易而无需“处理”该批准。</p><p>// if the transaction hasn’t already been approved, let’s “process” this approval<br>// and see if we can execute the transaction<br>//如果交易尚未获得批准，让我们“处理”此批准<br>//并查看是否可以执行交易</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">&#123;</span><br><span class="line">          <span class="string">&quot;TxId&quot;</span>: <span class="number">198</span>,</span><br><span class="line">          <span class="string">&quot;ProposalHash&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>消息参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">消息参数对应结构体</span><br><span class="line"><span class="keyword">type</span> TxnIDParams <span class="keyword">struct</span> &#123;</span><br><span class="line">  <span class="comment">// TxnID is the ID of the proposed transaction</span></span><br><span class="line">ID TxnID</span><br><span class="line"><span class="comment">// Optional hash of proposal to ensure an operation can only apply to a</span></span><br><span class="line"><span class="comment">// specific proposal.</span></span><br><span class="line">ProposalHash []<span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeApprove</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzaceabq2bam6t5jj5tzjtsm2q7kaom2xkjkblv45bdhey6bfcjrcv2e6&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc multisig.TxnIDParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line"></span><br><span class="line">    tipSet, err := apii.ChainGetTipSetByHeight(c, abi.ChainEpoch(<span class="number">593700</span>), types.EmptyTSK)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    replay, err := apii.StateReplay(c, tipSet.Key(), decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> aa multisig.ApproveReturn</span><br><span class="line">    err = aa.UnmarshalCBOR(bytes.NewBuffer(replay.MsgRct.Return))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(aa)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">&quot;Applied&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">&quot;ExitCode&quot;</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="string">&quot;Ret&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回值解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ApproveReturn <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// Applied indicates if the transaction was applied as opposed to proposed but not applied due to lack of approvals</span></span><br><span class="line">Applied <span class="keyword">bool</span></span><br><span class="line"><span class="comment">// Code is the exitcode of the transaction, if Applied is false this field should be ignored.</span></span><br><span class="line">Code exitcode.ExitCode</span><br><span class="line"><span class="comment">// Ret is the return vale of the transaction, if Applied is false this field should be ignored.</span></span><br><span class="line">Ret []<span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeApprove</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzaceabq2bam6t5jj5tzjtsm2q7kaom2xkjkblv45bdhey6bfcjrcv2e6&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc multisig.TxnIDParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line"></span><br><span class="line">    tipSet, err := apii.ChainGetTipSetByHeight(c, abi.ChainEpoch(<span class="number">593700</span>), types.EmptyTSK)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    replay, err := apii.StateReplay(c, tipSet.Key(), decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> aa multisig.ApproveReturn</span><br><span class="line">    err = aa.UnmarshalCBOR(bytes.NewBuffer(replay.MsgRct.Return))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(aa)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="5-Cancel"><a href="#5-Cancel" class="headerlink" title="5.Cancel"></a>5.Cancel</h3><h4 id="目的描述：-4"><a href="#目的描述：-4" class="headerlink" title="目的描述："></a>目的描述：</h4><p>取消交易</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;TxId&quot;</span>: <span class="number">23</span>,</span><br><span class="line">        <span class="string">&quot;ProposalHash&quot;</span>: <span class="string">&quot;xWOo+yB0Npov4/rYIMcTfmnlXgBLv6/cpAqAx8omoUU=&quot;</span></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>消息参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> TxnIDParams <span class="keyword">struct</span> &#123;</span><br><span class="line">ID TxnID</span><br><span class="line"><span class="comment">// Optional hash of proposal to ensure an operation can only apply to a</span></span><br><span class="line"><span class="comment">// specific proposal.</span></span><br><span class="line">ProposalHash []<span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeCancel</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzaceczuzt3bx6pbqkihww3s4yffbzknj3prvopgl6wauqrp4w5exd6ck&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc multisig.TxnIDParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="6-ChangeMultiaddrs"><a href="#6-ChangeMultiaddrs" class="headerlink" title="6.ChangeMultiaddrs"></a>6.ChangeMultiaddrs</h3><p>修改矿工 multiaddress。</p><h4 id="目的描述：-5"><a href="#目的描述：-5" class="headerlink" title="目的描述："></a>目的描述：</h4><p>修改矿工 multiaddress。</p><h4 id="调用参数"><a href="#调用参数" class="headerlink" title="调用参数"></a>调用参数</h4><p> <em>NewMultiAddrs</em> 新的 multiaddress 列表。</p><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><p>无</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Libp2p MultiAddress</span><br></pre></td></tr></table></figure><p>更改矿工libp2p地址</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">&#123;</span><br><span class="line">          <span class="string">&quot;NewMultiaddrs&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;BHt2irgGXcI=&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>消息参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ChangeMultiaddrsParams <span class="keyword">struct</span> &#123;</span><br><span class="line">NewMultiaddrs []abi.Multiaddrs</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">changeMultisigAddress</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacechzv4ytabwdwb4ggle3alccc4ehry6maazumimll3koackbkjkie&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc minerr.ChangeMultiaddrsParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(cc.NewMultiaddrs); i++ &#123;</span><br><span class="line">        multiaddrBytes, err := multiaddr.NewMultiaddrBytes(cc.NewMultiaddrs[i])</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            fmt.Println(err)</span><br><span class="line">        &#125;</span><br><span class="line">        fmt.Println(multiaddrBytes.String())</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="7-ChangeOwnerAddress"><a href="#7-ChangeOwnerAddress" class="headerlink" title="7.ChangeOwnerAddress"></a>7.ChangeOwnerAddress</h3><h4 id="目的描述：-6"><a href="#目的描述：-6" class="headerlink" title="目的描述："></a>目的描述：</h4><p>更改矿工owner地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">&#123;  </span><br><span class="line">&quot;f0417633&quot; &#x2F;&#x2F;矿工地址</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">changeOwnerAddress</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacedipmlzyaupk63uilaqmcguqsekfjw6kbcohs5k4otmfsjr5jtlqq&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    height, err := apii.ChainGetTipSetByHeight(c, abi.ChainEpoch(<span class="number">582838</span>), types.EmptyTSK)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    params, err := apii.StateDecodeParams(c, message.To, abi.MethodNum(<span class="number">23</span>), message.Params, height.Key())</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(params)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="8-ChangePeerID"><a href="#8-ChangePeerID" class="headerlink" title="8.ChangePeerID"></a>8.ChangePeerID</h3><h4 id="目的描述：-7"><a href="#目的描述：-7" class="headerlink" title="目的描述："></a>目的描述：</h4><p>更改矿工的PeerID</p><h4 id="调用参数-1"><a href="#调用参数-1" class="headerlink" title="调用参数"></a>调用参数</h4><p> <em>NewID</em> 新的 PeerID。</p><h4 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h4><p>无</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;NewID&quot;</span>: <span class="string">&quot;ACQIARIg5Z6wcl1jmIURfqclMJJ8p+7gysbOgvLa7JFqHi/hd1Q=&quot;</span></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>消息参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">type</span> ChangePeerIDParams <span class="keyword">struct</span> &#123;</span><br><span class="line">NewID abi.PeerID</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">changePeerId</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacec5hwvey334lyvxyges4rrr4eildrk3kp6bx3ag5cn3cefnnfghgg&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc minerr.ChangePeerIDParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fromBytes, err := peer.IDFromBytes(cc.NewID)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(fromBytes)</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="9-ChangeWorkerAddress"><a href="#9-ChangeWorkerAddress" class="headerlink" title="9.ChangeWorkerAddress"></a>9.ChangeWorkerAddress</h3><h4 id="目的描述：-8"><a href="#目的描述：-8" class="headerlink" title="目的描述："></a>目的描述：</h4><p>更改矿工worker地址</p><h4 id="调用参数-2"><a href="#调用参数-2" class="headerlink" title="调用参数"></a>调用参数</h4><p> <em>NewWorker</em> 新的 Worker。</p><h4 id="返回值-2"><a href="#返回值-2" class="headerlink" title="返回值"></a>返回值</h4><p>无</p><h4 id="官方代码注解：-3"><a href="#官方代码注解：-3" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>// ChangeWorkerAddress will ALWAYS overwrite the existing control addresses with the control addresses passed in the params.<br>// If a nil addresses slice is passed, the control addresses will be cleared.<br>// A worker change will be scheduled if the worker passed in the params is different from the existing worker.</p><p>// ChangeWorkerAddress将始终用在参数中传递的控制地址覆盖现有的控制地址。<br>//如果传递了零地址切片，则将清除控制地址。<br>//如果在参数中传递的工人与现有工人不同，则将安排工人更换。</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line">gkQAqb0Zg1gxA7NhailOLDOtoh/vkFINR46QUWTxYOz+LpjtzVIwDdLQJd7S5I9xQvBtqArFhpmqQlgxA5OwKeo9/kK66vYM1IKT5v7SGYjYqT/alE1PypqKdx+Kxfay/<span class="number">37863</span>Xp1JmOyy0B7VgxA5I0juri718y6XYlORkgwQNHgQNxp7W1qo4MuQ0yEMIeMh2WJIBT7IY222ys/M5E5w==</span><br></pre></td></tr></table></figure><p>参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ChangeWorkerAddressParams <span class="keyword">struct</span> &#123;</span><br><span class="line">NewWorker       addr.Address</span><br><span class="line">NewControlAddrs []addr.Address</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">changeWorkerAddress</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacebpptviyjddf6wrddeay6o7d26qhlwj7i6egrebpnybwvmqfizssq&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc minerr.ChangeWorkerAddressParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//fmt.Println(params)</span></span><br><span class="line">    fmt.Println(cc)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="10-Collect"><a href="#10-Collect" class="headerlink" title="10.Collect"></a>10.Collect</h3><p>大部分都有个错误信息，小部分消息状态为ok</p><p>接收方均为支付通道</p><p>通过“ Collect（）”支付的付款渠道成功赎回了金额</p><h4 id="目的描述：-9"><a href="#目的描述：-9" class="headerlink" title="目的描述："></a>目的描述：</h4><p>收集/汇总</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">无</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br></pre></td></tr></table></figure><blockquote><p>当前有的错误类型有：<br>   SysErrInvalidReceiver，ErrForbidden,SysErrForbidden 等</p></blockquote><hr><h3 id="11-CompactSectorNumbers"><a href="#11-CompactSectorNumbers" class="headerlink" title="11.CompactSectorNumbers"></a>11.CompactSectorNumbers</h3><h4 id="目的描述：-10"><a href="#目的描述：-10" class="headerlink" title="目的描述："></a>目的描述：</h4><p>压缩扇区号分配以减小分配的扇区号位字段的大小。</p><p>当按顺序或按顺序分配扇区号时，这时位域应保持很小。但是，如果位域变大此方法足以使PreCommitSector失败（或变得昂贵），<br>此方法可以调用以屏蔽（丢弃）所有未使用的扇区ID。<br>例如，如果分配了扇区1-99和101-200，则扇区号<br>可以屏蔽99，以将这两个范围合并为一个。</p><h4 id="官方代码注解：-4"><a href="#官方代码注解：-4" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>// Compacts sector number allocations to reduce the size of the allocated sector<br>// number bitfield.<br>//<br>// When allocating sector numbers sequentially, or in sequential groups, this<br>// bitfield should remain fairly small. However, if the bitfield grows large<br>// enough such that PreCommitSector fails (or becomes expensive), this method<br>// can be called to mask out (throw away) entire ranges of unused sector IDs.<br>// For example, if sectors 1-99 and 101-200 have been allocated, sector number<br>// 99 can be masked out to collapse these two ranges into one.</p><p>压缩扇区号分配以减小分配的扇区号位字段的大小。<br>当按顺序或按顺序分配扇区号时，这时位域应保持很小。但是，如果位域变大此方法足以使PreCommitSector失败（或变得昂贵），<br>此方法可以调用以屏蔽（丢弃）所有未使用的扇区ID。<br>例如，如果分配了扇区1-99和101-200，则扇区号<br>可以屏蔽99，以将这两个范围合并为一个。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">&#123;&quot;MaskSectorNumber&quot;: &quot;0-1052999&quot;&#125;</span><br></pre></td></tr></table></figure><p>参数解析：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> CompactSectorNumbersParams <span class="keyword">struct</span> &#123;</span><br><span class="line">MaskSectorNumbers bitfield.BitField</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeCompactSectorNumbers</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzaceavj4na57qhi6opp2zuiukj5pncd5v4nz2n3x6snvp2shr2v2eq6k&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc minerr.CompactSectorNumbersParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line">    iterator, err := cc.MaskSectorNumbers.BitIterator()</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(iterator.Next())</span><br><span class="line">    fmt.Println(cc.MaskSectorNumbers.Last())</span><br><span class="line">    fmt.Println(cc.MaskSectorNumbers.First())</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="12-ConfirmUpdateWorkerKey"><a href="#12-ConfirmUpdateWorkerKey" class="headerlink" title="12.ConfirmUpdateWorkerKey"></a>12.ConfirmUpdateWorkerKey</h3><h4 id="目的描述：-11"><a href="#目的描述：-11" class="headerlink" title="目的描述："></a>目的描述：</h4><blockquote><p>Confirmed worker address change whether reflected on chain</p><p>确认worker address 变更是否反应在链上</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">无</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="13-Constructor"><a href="#13-Constructor" class="headerlink" title="13.Constructor"></a>13.Constructor</h3><p>此类消息绝大部份也都有错误信息一项</p><h4 id="目的描述：-12"><a href="#目的描述：-12" class="headerlink" title="目的描述："></a>目的描述：</h4><p>创建账户时调用的构造函数。</p><h4 id="官方代码注解：-5"><a href="#官方代码注解：-5" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>// Storage miner actors are created exclusively by the storage power actor. In order to break a circular dependency<br>// between the two, the construction parameters are defined in the power actor.</p><p>//存储矿工actor由storage power actor专门创建。为了打破循环依赖<br>//在这两者之间，构造参数是在power actor者中定义的。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">无</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="14-ControlAddresses"><a href="#14-ControlAddresses" class="headerlink" title="14.ControlAddresses"></a>14.ControlAddresses</h3><h4 id="目的描述：-13"><a href="#目的描述：-13" class="headerlink" title="目的描述："></a>目的描述：</h4><p>获取矿工 Owner 和 Worker 地址。</p><h4 id="调用参数-3"><a href="#调用参数-3" class="headerlink" title="调用参数"></a>调用参数</h4><p>无</p><h4 id="返回值-3"><a href="#返回值-3" class="headerlink" title="返回值"></a>返回值</h4><p> <em>Owner</em> Owner 地址； <em>Worker</em> Worker 地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">无</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">&quot;Owner&quot;</span>: <span class="string">&quot;f050468&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Worker&quot;</span>: <span class="string">&quot;f050501&quot;</span>,</span><br><span class="line">      <span class="string">&quot;ControlAddrs&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;f023997&quot;</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>返回值解析：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> GetControlAddressesReturn <span class="keyword">struct</span> &#123;</span><br><span class="line">Owner        addr.Address</span><br><span class="line">Worker       addr.Address</span><br><span class="line">ControlAddrs []addr.Address</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeControllerAddress</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">  decode, err := cid.Decode(<span class="string">&quot;bafy2bzaced4qxa246o7hilmbfy5k5l34ykswkisk74qmln7txruzs4kkhvpg6&quot;</span>)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(err)</span><br><span class="line">  &#125;</span><br><span class="line">tipSet, err := apii.ChainGetTipSetByHeight(c, abi.ChainEpoch(<span class="number">205716</span>), types.EmptyTSK)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">replay, err := apii.StateReplay(c, tipSet.Key(), decode)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">var</span> cc minerr.GetControlAddressesReturn</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(replay.MsgRct.Return))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="15-CreateMiner"><a href="#15-CreateMiner" class="headerlink" title="15.CreateMiner"></a>15.CreateMiner</h3><h4 id="目的描述：-14"><a href="#目的描述：-14" class="headerlink" title="目的描述："></a>目的描述：</h4><p>用于创建矿工，接收方统一为f04</p><p>内部调用 <em>Exec</em> 创建矿工账户，创建成功后将金额 <em>Value</em> 转移至矿工账户。</p><h4 id="调用参数-4"><a href="#调用参数-4" class="headerlink" title="调用参数"></a>调用参数</h4><p> <em>Owner</em> 矿工的拥有者，管钱； <em>Worker</em> 负责挖矿计算的地址； <em>SealProofType</em> 表示矿工的扇区大小等信息； <em>Peer</em> 矿工的 PeerID。 <em>Multiaddrs</em> 矿工的 multiaddress 列表，可以用来连接矿工节点。</p><h4 id="返回值-4"><a href="#返回值-4" class="headerlink" title="返回值"></a>返回值</h4><p> <em>IDAddress</em> 新创建账户的 ID 格式地址，地址前缀 t0； <em>RobustAddress</em> 新创建账户的 Hash 格式地址，该格式不会被分叉影响。地址前缀 t2。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;Owner&quot;</span>: <span class="string">&quot;f3qvr6cwew2xeeay4ilwzkirk2dfjxbpvzfyg7frnkuava7qv2lxiq72ryzdmrjirw3h2ydeq5uvhmba7la64q&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Worker&quot;</span>: <span class="string">&quot;f3qvr6cwew2xeeay4ilwzkirk2dfjxbpvzfyg7frnkuava7qv2lxiq72ryzdmrjirw3h2ydeq5uvhmba7la64q&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SealProofType&quot;</span>: <span class="number">8</span>,</span><br><span class="line">  <span class="string">&quot;PeerId&quot;</span>: <span class="string">&quot;ACQIARIgQZkkMrCT6L97G+kb9o5ypYaF08qtpv/lJvKmmGmq6CM=&quot;</span>,</span><br><span class="line">  <span class="string">&quot;MultiAddresses&quot;</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数解析：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> CreateMinerParams <span class="keyword">struct</span> &#123;</span><br><span class="line">Owner         addr.Address</span><br><span class="line">Worker        addr.Address</span><br><span class="line">SealProofType abi.RegisteredSealProof</span><br><span class="line">Peer          abi.PeerID</span><br><span class="line">Multiaddrs    []abi.Multiaddrs</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeF04Message</span><span class="params">(ctx context.Context, api api.FullNode, db *gorm.DB)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacebq6bwcwpkmvi7wv5bhtqrdelqgpfb5t7yfsg4slkeqyrycqpjjeq&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">nil</span> != err &#123;</span><br><span class="line">       fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(time.Now())</span><br><span class="line">    height, err := api.ChainGetTipSetByHeight(ctx, abi.ChainEpoch(<span class="number">5000</span>), types.EmptyTSK)</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">nil</span> != err &#123;</span><br><span class="line">       fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, _ := api.ChainGetMessage(ctx, decode)</span><br><span class="line">    params, _ := api.StateDecodeParams(ctx, message.To, message.Method, message.Params, height.Key())</span><br><span class="line">    fmt.Println(params)</span><br><span class="line">    minerParams := power.CreateMinerParams&#123;&#125;</span><br><span class="line">    minerParams.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    fmt.Println(minerParams)</span><br><span class="line"> <span class="keyword">var</span> execReturn init2.ExecReturn</span><br><span class="line">    replay, err := api.StateReplay(ctx, height.Key(), decode)</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">nil</span> != err &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    err = execReturn.UnmarshalCBOR(bytes.NewReader(replay.MsgRct.Return))</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">nil</span> != err &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(execReturn)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">&quot;IdAddress&quot;</span>: <span class="string">&quot;f0417848&quot;</span>,</span><br><span class="line">      <span class="string">&quot;RobustAddress&quot;</span>: <span class="string">&quot;f26e3yuwp2scqayq5oq3iiqj4j2gvegbundyj7rxy&quot;</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>返回值解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ExecReturn <span class="keyword">struct</span> &#123;</span><br><span class="line">IDAddress     addr.Address <span class="comment">// The canonical ID-based address for the actor.</span></span><br><span class="line">RobustAddress addr.Address <span class="comment">// A more expensive but re-org-safe address for the newly created actor.</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeF04Message</span><span class="params">(ctx context.Context, api api.FullNode, db *gorm.DB)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacebq6bwcwpkmvi7wv5bhtqrdelqgpfb5t7yfsg4slkeqyrycqpjjeq&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">nil</span> != err &#123;</span><br><span class="line">       fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(time.Now())</span><br><span class="line">    height, err := api.ChainGetTipSetByHeight(ctx, abi.ChainEpoch(<span class="number">5000</span>), types.EmptyTSK)</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">nil</span> != err &#123;</span><br><span class="line">       fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, _ := api.ChainGetMessage(ctx, decode)</span><br><span class="line">    params, _ := api.StateDecodeParams(ctx, message.To, message.Method, message.Params, height.Key())</span><br><span class="line">    fmt.Println(params)</span><br><span class="line">    minerParams := power.CreateMinerParams&#123;&#125;</span><br><span class="line">    minerParams.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    fmt.Println(minerParams)</span><br><span class="line"> <span class="keyword">var</span> execReturn init2.ExecReturn</span><br><span class="line">    replay, err := api.StateReplay(ctx, height.Key(), decode)</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">nil</span> != err &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    err = execReturn.UnmarshalCBOR(bytes.NewReader(replay.MsgRct.Return))</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">nil</span> != err &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(execReturn)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="16-DeclareFaults"><a href="#16-DeclareFaults" class="headerlink" title="16.DeclareFaults"></a>16.DeclareFaults</h3><h4 id="目的描述：-15"><a href="#目的描述：-15" class="headerlink" title="目的描述："></a>目的描述：</h4><p>用于宣告扇区错误,时空证明检测错误扇区</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;Faults&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Deadline&quot;</span>: <span class="number">47</span>,</span><br><span class="line">      <span class="string">&quot;Partition&quot;</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="string">&quot;Sectors&quot;</span>: <span class="string">&quot;108682,108702,108712,108726,108735,108741-108742,108751,108759,108836,108841,108848,108851-108852,108856-108857,108937,110055,110067,110118,110166,110192,110195,110201,110206,110209,110215,110218,110220,110222,110225-110234,110236,110239-110255,110257-110258,110260-110267,110269-110276,110278,110280-110281,110284-110285,110287,110289-110291,110295,110297-110298,111580,111584,111595-111597,111603,111608,111616,111619,111621,111624,111627-111628,111630,111634-111635,111640,111642,111646,111649-111650,111655,111657-111662,111665-111668,111673,111675-111676,111680,111684,111686,111694,111697,111703-111706,111708,111716-111718,111720,111732-111735,111737-111738,111741-111742,111752-111757,111759,111761,111763,112340,112343,112346,112352,112358-112359,112363,112365,112404,112415,112418-112419,112421-112422,112425,112433,112437,112439-112442,112445-112446,112449,112455,112461,112463,112465,112470,112472,112478-112479,112482-112483,112485,112488-112799&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;<span class="string">&quot;Owner&quot;</span>: <span class="string">&quot;f3qvr6cwew2xeeay4ilwzkirk2dfjxbpvzfyg7frnkuava7qv2lxiq72ryzdmrjirw3h2ydeq5uvhmba7la64q&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Worker&quot;</span>: <span class="string">&quot;f3qvr6cwew2xeeay4ilwzkirk2dfjxbpvzfyg7frnkuava7qv2lxiq72ryzdmrjirw3h2ydeq5uvhmba7la64q&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SealProofType&quot;</span>: <span class="number">8</span>,</span><br><span class="line">  <span class="string">&quot;PeerId&quot;</span>: <span class="string">&quot;ACQIARIgQZkkMrCT6L97G+kb9o5ypYaF08qtpv/lJvKmmGmq6CM=&quot;</span>,</span><br><span class="line">  <span class="string">&quot;MultiAddresses&quot;</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> DeclareFaultsParams <span class="keyword">struct</span> &#123;</span><br><span class="line">Faults []FaultDeclaration</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> FaultDeclaration <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// The deadline to which the faulty sectors are assigned, in range [0..WPoStPeriodDeadlines)</span></span><br><span class="line">Deadline <span class="keyword">uint64</span></span><br><span class="line"><span class="comment">// Partition index within the deadline containing the faulty sectors.</span></span><br><span class="line">Partition <span class="keyword">uint64</span></span><br><span class="line"><span class="comment">// Sectors in the partition being declared faulty.</span></span><br><span class="line">Sectors bitfield.BitField</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeDeclareFaults</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacedretykpp6puetth6zjbcbmogxvocru4zqotwpvnc5p2y2f3bxjjc&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc minerr.DeclareFaultsParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line">    <span class="keyword">for</span> _, v := <span class="keyword">range</span> cc.Faults &#123;</span><br><span class="line">        fmt.Println(v)</span><br><span class="line">        <span class="comment">//iterator, err := v.Sectors.BitIterator()</span></span><br><span class="line">        <span class="comment">//if err != nil &#123;</span></span><br><span class="line">        <span class="comment">//    fmt.Println(err)</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line">        fmt.Println(v.Sectors.Count())</span><br><span class="line">        fmt.Println(v.Sectors.Last())</span><br><span class="line">        fmt.Println(v.Sectors.First())</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="17-DeclareFaultsRecovered"><a href="#17-DeclareFaultsRecovered" class="headerlink" title="17.DeclareFaultsRecovered"></a>17.DeclareFaultsRecovered</h3><h4 id="目的描述：-16"><a href="#目的描述：-16" class="headerlink" title="目的描述："></a>目的描述：</h4><p>宣告错误扇区恢复，时空证明恢复扇区</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;Recoveries&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Deadline&quot;</span>: <span class="number">9</span>,</span><br><span class="line">      <span class="string">&quot;Partition&quot;</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="string">&quot;Sectors&quot;</span>: <span class="string">&quot;1074,20977,22854&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Deadline&quot;</span>: <span class="number">9</span>,</span><br><span class="line">      <span class="string">&quot;Partition&quot;</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="string">&quot;Sectors&quot;</span>: <span class="string">&quot;110843,115284,115719,116036&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Deadline&quot;</span>: <span class="number">9</span>,</span><br><span class="line">      <span class="string">&quot;Partition&quot;</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="string">&quot;Sectors&quot;</span>: <span class="string">&quot;233416&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> DeclareFaultsRecoveredParams <span class="keyword">struct</span> &#123;</span><br><span class="line">Recoveries []RecoveryDeclaration</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> RecoveryDeclaration <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// The deadline to which the recovered sectors are assigned, in range [0..WPoStPeriodDeadlines)</span></span><br><span class="line">Deadline <span class="keyword">uint64</span></span><br><span class="line"><span class="comment">// Partition index within the deadline containing the recovered sectors.</span></span><br><span class="line">Partition <span class="keyword">uint64</span></span><br><span class="line"><span class="comment">// Sectors in the partition being declared recovered.</span></span><br><span class="line">Sectors bitfield.BitField</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeDeclareFaultsRecovered</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacea6lwnrow5mctt3zabjw7lqoxj52qhoadukouyimmfdcftwd32sho&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc minerr.DeclareFaultsRecoveredParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line">    <span class="keyword">for</span> _, v := <span class="keyword">range</span> cc.Recoveries &#123;</span><br><span class="line">        fmt.Println(v)</span><br><span class="line">        <span class="comment">//iterator, err := v.Sectors.BitIterator()</span></span><br><span class="line">        <span class="comment">//if err != nil &#123;</span></span><br><span class="line">        <span class="comment">//    fmt.Println(err)</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line">        fmt.Println(v.Sectors.Count())</span><br><span class="line">        fmt.Println(v.Sectors.Last())</span><br><span class="line">        fmt.Println(v.Sectors.First())</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="18-DisputeWindowedPoSt"><a href="#18-DisputeWindowedPoSt" class="headerlink" title="18.DisputeWindowedPoSt"></a>18.DisputeWindowedPoSt</h3><h4 id="目的描述：-17"><a href="#目的描述：-17" class="headerlink" title="目的描述："></a>目的描述：</h4><p>（时空证明争议）大多数会有错误信息</p><h4 id="官方注释："><a href="#官方注释：" class="headerlink" title="官方注释："></a>官方注释：</h4><blockquote><p>// Note: these are going to be slightly inaccurate as time<br>// will have moved on from when the post was actually submitted.<br>// However, these are estimates <em>anyways</em>.</p><p>//注意：随着时间的推移，这些内容将有些不准确<br>//从实际发布时开始提交。<br>//不过，这些都是_anyways_的估算值。</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;Deadline&quot;</span>: <span class="number">26</span>,</span><br><span class="line">  <span class="string">&quot;PoStIndex&quot;</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> DisputeWindowedPoStParams <span class="keyword">struct</span> &#123;</span><br><span class="line">Deadline  <span class="keyword">uint64</span></span><br><span class="line">PoStIndex <span class="keyword">uint64</span> <span class="comment">// only one is allowed at a time to avoid loading too many sector infos.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeDisputeWindowedPoSt</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzaceazkdsv53i6vca6xdk6ejeshiysuzd56yy3a76nrqlsbq4oc2brxy&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc miner.DisputeWindowedPoStParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="19-Exec"><a href="#19-Exec" class="headerlink" title="19.Exec"></a>19.Exec</h3><h4 id="目的描述：-18"><a href="#目的描述：-18" class="headerlink" title="目的描述："></a>目的描述：</h4><p>消息接收方均为f01</p><p>创建特殊类型的账户，例如 Multisig, PaymentChannel 等，创建成功后将金额 Value 转移至新创建的账户。</p><h4 id="调用参数-5"><a href="#调用参数-5" class="headerlink" title="调用参数"></a>调用参数</h4><p> <em>CodeCID</em> 所创建账户类型的 CID 格式； <em>ConstructorParams</em> 创建账户的 <em>Constructor</em> 消息参数。</p><h4 id="返回值-5"><a href="#返回值-5" class="headerlink" title="返回值"></a>返回值</h4><p> <em>IDAddress</em> 新创建账户的 ID 格式地址，地址前缀 t0； <em>RobustAddress</em> 新创建账户的 Hash 格式地址，该格式不会被分叉影响。地址前缀 t2。</p><h4 id="官方代码注释："><a href="#官方代码注释：" class="headerlink" title="官方代码注释："></a>官方代码注释：</h4><blockquote><p>// Compute a re-org-stable address.<br>   // This address exists for use by messages coming from outside the system, in order to<br>   // stably address the newly created actor even if a chain re-org causes it to end up with<br>   // a different ID.</p><p>//计算一个重新组织稳定的地址。<br>//此地址存在，供系统外的消息使用，以便<br>//稳定地解决新创建的actor，即使链重组导致其最终以<br>//不同的ID。</p><p>   // Allocate an ID for this actor.</p><p>   为actor分配一个ID</p><p>   // Store mapping of pubkey or actor address to actor ID<br>   存储pubkey或actor地址到actor ID的映射</p><p>   // Create an empty actor.<br>   创建一个空的actor</p><p>   // Invoke constructor.<br>   调用construct</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;CodeCid&quot;</span>: <span class="string">&quot;bafkqafdgnfwc6mzpobqxs3lfnz2gg2dbnzxgk3a&quot;</span>,</span><br><span class="line">  <span class="string">&quot;ConstructorParams&quot;</span>: <span class="string">&quot;glgxA5MXq0/0yCIkaemuYg9xgHo0c0lnnS2K3Mq6NDCEGb0v0lGh6hg3aro+MLLHYnk7BEQAyqcB&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数与返回值解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ExecParams <span class="keyword">struct</span> &#123;</span><br><span class="line">CodeCID           cid.Cid <span class="string">`checked:&quot;true&quot;`</span> <span class="comment">// invalid CIDs won&#x27;t get committed to the state tree</span></span><br><span class="line">ConstructorParams []<span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ExecReturn <span class="keyword">struct</span> &#123;</span><br><span class="line">IDAddress     addr.Address <span class="comment">// The canonical ID-based address for the actor.</span></span><br><span class="line">RobustAddress addr.Address <span class="comment">// A more expensive but re-org-safe address for the newly created actor.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ConstructorParams <span class="keyword">struct</span> &#123;</span><br><span class="line">Signers               []addr.Address</span><br><span class="line">NumApprovalsThreshold <span class="keyword">uint64</span></span><br><span class="line">UnlockDuration        abi.ChainEpoch</span><br><span class="line">&#125;  (测试时出现过解析到该结构体失败的情况，案例中有给出另一种获取方法)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeMultisigMessage</span><span class="params">(ctx context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacecdrmgvdwn24cl53uhl63iglpqz4z332tzavbrsu2r2bdxe4736tu&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(ctx, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    height, err := apii.ChainGetTipSetByHeight(ctx, abi.ChainEpoch(<span class="number">573070</span>), types.EmptyTSK)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    execParams := init2.ExecParams&#123;&#125;</span><br><span class="line">    execParams.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    multisgParams := multisig.ConstructorParams&#123;&#125;</span><br><span class="line">    multisgParams.UnmarshalCBOR(bytes.NewBuffer(execParams.ConstructorParams))</span><br><span class="line">    <span class="keyword">var</span> execReturn init2.ExecReturn</span><br><span class="line">    replay, err := apii.StateReplay(ctx, height.Key(), decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    err = execReturn.UnmarshalCBOR(bytes.NewReader(replay.MsgRct.Return))</span><br><span class="line">    balance, err := apii.MsigGetAvailableBalance(ctx, execReturn.IDAddress, types.EmptyTSK)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fmt.Println(message.To)</span><br><span class="line">    actor, err := apii.StateGetActor(ctx, execReturn.IDAddress, types.EmptyTSK)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    tbs := bufbstore.NewTieredBstore(apibstore.NewAPIBlockstore(apii), blockstore.NewTemporary())</span><br><span class="line">    mas, err := muls.Load(adt.WrapStore(ctx, cbor.NewCborStore(tbs)), actor)</span><br><span class="line">    signers, err := mas.Signers()</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(signers)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _, signer := <span class="keyword">range</span> multisgParams.Signers  &#123;</span><br><span class="line">        minerInfo := table.TAccountMultsig&#123;</span><br><span class="line">            Id: execReturn.IDAddress.String(),</span><br><span class="line">            RobustAddress: execReturn.RobustAddress.String(),</span><br><span class="line">            <span class="comment">//StartEpoch: int64(parentTipSet.Height()),</span></span><br><span class="line">            AvailableBalance: balance.String(),</span><br><span class="line">            Signer: signer.String(),</span><br><span class="line">            ApprovalsThreshold: <span class="keyword">int64</span>(multisgParams.NumApprovalsThreshold),</span><br><span class="line">            UnlockDuration: <span class="keyword">int64</span>(multisgParams.UnlockDuration),</span><br><span class="line">        &#125;</span><br><span class="line">        fmt.Println(minerInfo)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;IdAddress&quot;: &quot;f0418970&quot;,</span><br><span class="line">  &quot;RobustAddress&quot;: &quot;f2hm4xmjcl2zavx7ixrcvwfa76m75nyauc5ynnffa&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="20-ExtendSectorExpiration"><a href="#20-ExtendSectorExpiration" class="headerlink" title="20.ExtendSectorExpiration"></a>20.ExtendSectorExpiration</h3><h4 id="目的描述：-19"><a href="#目的描述：-19" class="headerlink" title="目的描述："></a>目的描述：</h4><p>将一个扇区的到期时间更改为一个新的，更晚的时间。扇区不得终止或出现故障。为新的到期时间重新计算扇区的功率。</p><h4 id="官方代码注释：-1"><a href="#官方代码注释：-1" class="headerlink" title="官方代码注释："></a>官方代码注释：</h4><blockquote><p>// Changes the expiration epoch for a sector to a new, later one.<br>// The sector must not be terminated or faulty.<br>// The sector’s power is recomputed for the new expiration.</p><p>//将一个扇区的到期时间更改为一个新的，更晚的时间。<br>//扇区不得终止或出现故障。<br>//为新的到期时间重新计算扇区的功率。</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;Extensions&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Deadline&quot;</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="string">&quot;Partition&quot;</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="string">&quot;Sectors&quot;</span>: <span class="string">&quot;809,814,816-817,820,822,824,826-831,836,839,860,883,888-895,902,911-912,914-915,939,971,995,997-998,1002-1003,1006,1021-1023,1031,1036-1038,1046-1049,1051&quot;</span>,</span><br><span class="line">      <span class="string">&quot;NewExpiration&quot;</span>: <span class="number">1626934</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Deadline&quot;</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="string">&quot;Partition&quot;</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="string">&quot;Sectors&quot;</span>: <span class="string">&quot;1045&quot;</span>,</span><br><span class="line">      <span class="string">&quot;NewExpiration&quot;</span>: <span class="number">1626934</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数解析：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ExtendSectorExpirationParams <span class="keyword">struct</span> &#123;</span><br><span class="line">Extensions []ExpirationExtension</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ExpirationExtension <span class="keyword">struct</span> &#123;</span><br><span class="line">Deadline      <span class="keyword">uint64</span></span><br><span class="line">Partition     <span class="keyword">uint64</span></span><br><span class="line">Sectors       bitfield.BitField</span><br><span class="line">NewExpiration abi.ChainEpoch</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeExtendSectorExpirationParams</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacedxdrljmeudy5a2vh2pyu4mtyggjjsilhtm7isxu7hqxxka2fq5zu&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc minerr.ExtendSectorExpirationParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> _, v := <span class="keyword">range</span> cc.Extensions &#123;</span><br><span class="line">        fmt.Println(v)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="21-PreCommitSector"><a href="#21-PreCommitSector" class="headerlink" title="21.PreCommitSector"></a>21.PreCommitSector</h3><h4 id="目的描述：-20"><a href="#目的描述：-20" class="headerlink" title="目的描述："></a>目的描述：</h4><p>消息的value值会转账给消息接收方</p><p>矿工提交 PreCommit 信息。</p><h4 id="调用参数-6"><a href="#调用参数-6" class="headerlink" title="调用参数"></a>调用参数</h4><p> <em>RegisteredProof</em> <em>SectorNumber</em> Sector 序号； <em>SealedCID</em> <em>SealedRandEpoch</em> <em>DealIDs</em> <em>Expiration Sector</em> 过期时间。</p><h4 id="返回值-6"><a href="#返回值-6" class="headerlink" title="返回值"></a>返回值</h4><p>无</p><h4 id="官方代码注解：-6"><a href="#官方代码注解：-6" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>// Proposals must be posted on chain via sma.PublishStorageDeals before PreCommitSector.<br>// Optimization: PreCommitSector could contain a list of deals that are not published yet.</p><p>（Proposals）投标必须在PreCommitSector之前通过sma.PublishStorageDeals在链上发布。<br>//优化：PreCommitSector可能包含尚未发布的交易列表。</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;RegisteredProof&quot;</span>: <span class="number">8</span>,</span><br><span class="line">  <span class="string">&quot;SectorNumber&quot;</span>: <span class="number">16306</span>,</span><br><span class="line">  <span class="string">&quot;SealedCid&quot;</span>: <span class="string">&quot;bagboea4b5abcbptd43l6v4o7b3kn4drtjxgyvjqntvt27xy6sfem4ecitzyeffzv&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SealRandEpoch&quot;</span>: <span class="number">592396</span>,</span><br><span class="line">  <span class="string">&quot;DealIds&quot;</span>: [],</span><br><span class="line">  <span class="string">&quot;Expiration&quot;</span>: <span class="number">2094328</span>,</span><br><span class="line">  <span class="string">&quot;ReplaceCapacity&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;ReplaceSectorDeadline&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;ReplaceSectorPartition&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;ReplaceSector&quot;</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SectorPreCommitInfo <span class="keyword">struct</span> &#123;</span><br><span class="line">SealProof       abi.RegisteredSealProof</span><br><span class="line">SectorNumber    abi.SectorNumber</span><br><span class="line">SealedCID       cid.Cid <span class="string">`checked:&quot;true&quot;`</span> <span class="comment">// CommR</span></span><br><span class="line">SealRandEpoch   abi.ChainEpoch</span><br><span class="line">DealIDs         []abi.DealID</span><br><span class="line">Expiration      abi.ChainEpoch</span><br><span class="line">ReplaceCapacity <span class="keyword">bool</span> <span class="comment">// Whether to replace a &quot;committed capacity&quot; no-deal sector (requires non-empty DealIDs)</span></span><br><span class="line"><span class="comment">// The committed capacity sector to replace, and it&#x27;s deadline/partition location</span></span><br><span class="line">ReplaceSectorDeadline  <span class="keyword">uint64</span></span><br><span class="line">ReplaceSectorPartition <span class="keyword">uint64</span></span><br><span class="line">ReplaceSectorNumber    abi.SectorNumber</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodePreCommitSector</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacebdcez2tblorrpzhjews5l2irq6sfiyxk5zaztladet376wpp7zwi&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc minerr.SectorPreCommitInfo</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="22-Propose"><a href="#22-Propose" class="headerlink" title="22.Propose"></a>22.Propose</h3><h4 id="目的描述：-21"><a href="#目的描述：-21" class="headerlink" title="目的描述："></a>目的描述：</h4><p>消息参数的value值会转账给消息参数里指明的接收方</p><p>向给定的multisig提出一个事务。</p><p>初步观察是让指定的多签账户给消息参数中指定的To转钱</p><h4 id="官方代码注解：-7"><a href="#官方代码注解：-7" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>Propose a transaction to the given multisig.</p><p>向给定的multisig提出一个事务。</p><p>// Note: this transaction ID may not be stable across chain re-orgs.<br>   // The proposal hash may be provided as a stability check when approving.</p><p>此交易ID在跨链重组机构中可能不稳定。</p><p>//提案哈希可以作为批准时的稳定性检查提供。</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;To&quot;</span>: <span class="string">&quot;f1ht2ak3ctcc7faqsmwzpogr375pttlkbzeexbvpa&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Value&quot;</span>: <span class="string">&quot;18903506871636894026&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Method&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;Params&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;TxId&quot;</span>: <span class="number">307</span>,</span><br><span class="line">  <span class="string">&quot;Applied&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;ExitCode&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;Ret&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数返回值解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ProposeParams <span class="keyword">struct</span> &#123;</span><br><span class="line">To     addr.Address</span><br><span class="line">Value  abi.TokenAmount</span><br><span class="line">Method abi.MethodNum</span><br><span class="line">Params []<span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ProposeReturn <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// TxnID is the ID of the proposed transaction</span></span><br><span class="line">TxnID TxnID</span><br><span class="line"><span class="comment">// Applied indicates if the transaction was applied as opposed to proposed but not applied due to lack of approvals</span></span><br><span class="line">Applied <span class="keyword">bool</span></span><br><span class="line"><span class="comment">// Code is the exitcode of the transaction, if Applied is false this field should be ignored.</span></span><br><span class="line">Code exitcode.ExitCode</span><br><span class="line"><span class="comment">// Ret is the return vale of the transaction, if Applied is false this field should be ignored.</span></span><br><span class="line">Ret []<span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodePropose</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacebpkaf7w6r6rxlgruuyg7xi2pyxtrinl52gng45nnwwp65ielunee&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc multisig.ProposeParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line"></span><br><span class="line">    tipSet, err := apii.ChainGetTipSetByHeight(c, abi.ChainEpoch(<span class="number">594297</span>), types.EmptyTSK)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    replay, err := apii.StateReplay(c, tipSet.Key(), decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> aa multisig.ProposeReturn</span><br><span class="line">    err = aa.UnmarshalCBOR(bytes.NewBuffer(replay.MsgRct.Return))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(aa)</span><br><span class="line">    <span class="comment">//var aa multisig.ProposalHashData</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="23-ProveCommitSector"><a href="#23-ProveCommitSector" class="headerlink" title="23.ProveCommitSector"></a>23.ProveCommitSector</h3><p>矿工提交 扇区证明 信息。</p><p>消息的value值会转账给消息的接收方（一般都是账户下的矿工）</p><h4 id="目的描述：-22"><a href="#目的描述：-22" class="headerlink" title="目的描述："></a>目的描述：</h4><p>检查相应扇区预先承诺的状态，然后安排要批量验证的证据by power actor。<br>如果有效，power actor将在与此消息相同的纪元末尾调用ConfirmSectorProofsValid</p><p>一个矿工每个时期最多只能提交200个证明提交。在每个时期证明200个扇区，直到全部被证明。</p><h4 id="调用参数-7"><a href="#调用参数-7" class="headerlink" title="调用参数"></a>调用参数</h4><p> <em>SectorNumber</em> Sector 序号； <em>Proof</em></p><h4 id="返回值-7"><a href="#返回值-7" class="headerlink" title="返回值"></a>返回值</h4><p>无</p><h4 id="官方代码注解：-8"><a href="#官方代码注解：-8" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>// Checks state of the corresponding sector pre-commitment, then schedules the proof to be verified in bulk<br>// by the power actor.<br>// If valid, the power actor will call ConfirmSectorProofsValid at the end of the same epoch as this message.</p><p>检查相应扇区预先承诺的状态，然后安排要批量验证的证据<br>//by power actor。<br>//如果有效，power actor将在与此消息相同的纪元末尾调用ConfirmSectorProofsValid</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="string">&quot;SectorNumber&quot;</span>: <span class="number">310311</span>,</span><br><span class="line">  <span class="string">&quot;Proof&quot;</span>: <span class="string">&quot;parGDT8LL9ybqvWWhJLWWizd3H8f7F51MZP4W7RCL5ozRMREUj8mcVl0xXVW+XsojPjRIfo0EH5e4+g1qStl0Hz78CwcEaVqnO+COe1qdnYB4AQt3EN11S7fV9l5Ua2+ElAIBzkr2KxElSP3Rm0GbmSk2vjdCrrh2Jn07lmgzx3uUHQulVuNxo4j0jgblgW8sdRUAUn5EcCoKYMLj43og9Tsre7zq279Te0jfdjeVw/Ug32YinehN2Wt89yBA+SJkP+oBGIIGXqUWhNm5CR4OhyZ3Sof3ydzzeS/sKrKgov2nvHVCdURXZhp627efVDsqZ+A3DXFtHfdIcayqIapKwYBvu3dzf+jtRHFh9XLhkTvI7amrWbJ7oJW24MonNgdBlZBfzUW8JO40pZ/XU85jQxQ9z4qFWuFWfho98WHyJmnj4OkT3FFEBSyUd+Xui7ZiBNnl6HK61km/B57QRrPbUYj6Q61JrG9JZ9Tu6oGxnlqfKI6FXTa20/NfEZUUSdWlw1fLlrnB6EbpAlVVHBmY5rg0940z3pzJEj5m+fEWqzum22cIW/mK4IburxSqINwkvE1O+b9YEEp2VdAM2wkyISYAEb4g/gnFAs8gamhjrJ/eZ6HQYL+LDwiaf4wJ3QbC1sse+TJMk3LLIRt8+/6N2dlmPHn2xriGPT2oJgZ1hiHYraYvSewLoepD0FFS1f+uQ+5fXz7NqwQfzV+RUhk4xMoKtEcP+0R8qxWmrYtg1062fkMlttMUYSjFOQ2v3U2i2FwT1Q/YSShpvPffyfR/lZngTM7ev+k0wKhgv6TRoJoW3PnNZJJnCx3PVAawvUbjNn7xR7uQiso8rMuRRd9Z+X1SuwHnZjE1n6PsPB38E4TIAN8XbKqVVtAjD839LDvARPzLMaKtBK5vh+zyL67IYaUd+KU1BGcBqz5s6lqUIWLtTX1fPvi6DzZJ4pBst+zpN8brjb2qZPS7OB6lK31zyVsoKDDozUaUurEkTgffr06jmvCUumoLL11DBb/eUQVjfqdkuqAF20LQ9jzbsyjCIuFd7WfZll2Z+CrMcn8WRxxNeqlY4mEyCQxmMGWyAgrrZ9h/sFTSuVzwWgxpHrl8LcoDB6ZSCMMl3lz5qfpDE1x+fmwz2BaiDVQMtqcSVHrDYu20ek6tyBmUQEEVD47RX9SErccHppYjU6L6Ezfft0AxjfAWqLFe2v766TtDgrGq7W3mG3Xa8T/YXcOsqwp5DFzTsV9Z1CNhkTHz7LQaBCJO+wK1OJOc3KdDmTOemN4t1+g6njg1mRkSBeWby2P3B/6JG3YBM81nsMqr1HEj3Lv9p+rU8vprAZp1HpRry4BsMfG55RDbq41bWZYOlbdclM2KJyslRvwgFpe9i/QSVX01dhL9C83Af/Zw+csk7QBAGVlnvFM/9/S4fRJcaLdQhE5MLnKf/xpYepushCARx/cTKCGKk28wokOh6b2nZJKjJNiaS9QSLm+NCkj8tqkflnBtIZXh8wlCx1nE2884aNCketDvkdR0MCw2HtnuHz6liAiIHWwbdBpdOXrTG0IbcefH8nMefWj5D2E5eUyHalYgVWdbSu5jrfTslHr4PkJmTQBjW9jzDMU2lR0cpkzvcOVfSp6Fr2Qf6qXUX/p4qZuuNvIZkapUsnAJ/2NjZZRDKne8lYqAppQHjbaZSb3sBmzYLx/U0zp8EkYt6/kz38ymLmiW1GMxreFLeanktLftLvl9spZye3K5gWTXIxvvlDJ2eeHoMW4wkK+cZELeXcGcsOEfbF6Il43Dif06NacluPMUbitx/STsTKUy4N2zLAXzb1TWNt+wXWEsZXGpCkA/WqinQSHSsyuNRUI49OThxo8R6eQjOhBQZ5kvg6gn3hQ5hoRPJo5G35aOudYxNlBmEly/0EJgct+8+EbKBhrEfFwDEwR/GfBec7NHAFWIQxGgLq1vc8zQNCrK+1G313p1xZVuX13KJAzYMgGzoRuqUu4HawMBC4p6iKeKpBq9+rUSzFgwpfUnZ4jUqaZJ30I4jgqe5Nb09EFrzeyQlEzgWdk3rJPciiq6bUgoYQSgY0nvPEnPI0tbzm+Ih8K5MOJ44YccxpM5WYVFj8QbeKZsyzsZCbuJ/zyTGOWsIbIFhxo7Ug2Wqa4lJmU0zNeyI681yoeEEuOMMovot9wvYgMCN53zuW4kNXDWamPpQX0yrgnBfpdo/19PopD0dfvVPRftNpiyS0mflSN4TfPHdk7rEyhpJMwTIpsA9ltr3HSWM/U+JjVJ1DLWGEEPdS8jcsifAHo8XrphTMYxc/6VpcApWk4CFZEFLSWSUZ/nAuoEWA/GTbMUl5GbEjtoI3jivev0nihxPY/Rm1rMCQKIx82pj4UqHRuuNaLJJ/5jiYnSdEUfQ3Iyi0MkMcPw3ClKrMvKA2vew0IdS2Xbs0tqUJZEImxnwrviRE2ROAtNsLfEV9T7kAPvRUrmEV8Hh71o0VG0MzpxbREwU/f56cQAvbrr7THV0/CK1aVRSLRHzRyszVQJbJhcrvYJYbd5oOYZLP8iGRUXKEq8X/FQVh+Brxb&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line">无</span><br></pre></td></tr></table></figure><p>参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">type</span> ProveCommitSectorParams <span class="keyword">struct</span> &#123;</span><br><span class="line">SectorNumber abi.SectorNumber</span><br><span class="line">Proof        []<span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeProveCommitSector</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzaceaxtai4zjwb6x6xi6u2bbfu7yqnhwptebrchtwgvrm2zwev56nfpc&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc minerr.ProveCommitSectorParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewBuffer(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="24-PubkeyAddress"><a href="#24-PubkeyAddress" class="headerlink" title="24.PubkeyAddress"></a>24.PubkeyAddress</h3><p>获取公钥地址：BLS pubkey</p><p>消息接收方返回其地址。那么问题来了，消息都发给了对方不知道消息地址是为什么？</p><p>有时也会报错，错误信息例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">not enough gas: used&#x3D;239519, available&#x3D;250000, use&#x3D;114617 (RetCode&#x3D;7)</span><br></pre></td></tr></table></figure><h4 id="目的描述：-23"><a href="#目的描述：-23" class="headerlink" title="目的描述："></a>目的描述：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">Ynl0ZSBhcnJheQ&#x3D;&#x3D;（时有时无）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line">&quot;f3r7xigxhxcqyymqrknajhxrlnpsxmznqp5vmyx3i3l2nwaoh5zfuuuzsu25io5sdxikkltlckijbmsu4fh52a&quot;</span><br></pre></td></tr></table></figure><p>参数返回值解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="25-PublishStorageDeals"><a href="#25-PublishStorageDeals" class="headerlink" title="25.PublishStorageDeals"></a>25.PublishStorageDeals</h3><p>可用于获取订单信息：<br>接收方均为f05</p><h4 id="目的描述：-24"><a href="#目的描述：-24" class="headerlink" title="目的描述："></a>目的描述：</h4><p>发布一组新的存储交易（尚未包含在扇区中）</p><h4 id="官方代码注解：-9"><a href="#官方代码注解：-9" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>// Publish a new set of storage deals (not yet included in a sector).<br>发布一组新的存储交易（尚未包含在扇区中）。</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;Deals&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Proposal&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;PieceCID&quot;</span>: <span class="string">&quot;baga6ea4seaqbbqcfwv7ucbv7eajwh2w553tchnicok7qwai4yu4c7b2apn6r2ma&quot;</span>,</span><br><span class="line">        <span class="string">&quot;PieceSize&quot;</span>: <span class="number">34359738368</span>,</span><br><span class="line">        <span class="string">&quot;VerifiedDeal&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;Client&quot;</span>: <span class="string">&quot;f1jttpq32myxfb3dt3ybytfyigvpltsjqssx427ai&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Provider&quot;</span>: <span class="string">&quot;f0228712&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Label&quot;</span>: <span class="string">&quot;mAXCg5AIgqJwIDcUlw/f92cpBgOq1kB3OjiRxXkE9Wp0NDMJBd04&quot;</span>,</span><br><span class="line">        <span class="string">&quot;StartEpoch&quot;</span>: <span class="number">737230</span>,</span><br><span class="line">        <span class="string">&quot;endEpoch&quot;</span>: <span class="number">2033862</span>,</span><br><span class="line">        <span class="string">&quot;StoragePricePerEpoch&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ProviderCollateral&quot;</span>: <span class="string">&quot;9039263001107346&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ClientCollateral&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;ClientSignature&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;Type&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;Signature&quot;</span>: <span class="string">&quot;OB7pmXMQXdQp0ZJGnld069S0tziGP/8Uas1YID6j6pkDsFwy5i1QHvb4E6d71JUys2LIT/KbzAiArhN/u4m7uQA=&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Proposal&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;PieceCID&quot;</span>: <span class="string">&quot;baga6ea4seaqagafmbbtza2qwjutpejsjz3x7ebo7f3mrprtgrrxxttizixay2fq&quot;</span>,</span><br><span class="line">        <span class="string">&quot;PieceSize&quot;</span>: <span class="number">34359738368</span>,</span><br><span class="line">        <span class="string">&quot;VerifiedDeal&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;Client&quot;</span>: <span class="string">&quot;f1jttpq32myxfb3dt3ybytfyigvpltsjqssx427ai&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Provider&quot;</span>: <span class="string">&quot;f0228712&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Label&quot;</span>: <span class="string">&quot;mAXCg5AIgBlZudsHhXrh1X/X/2LiYvaP0vNHK7L7whZpr6CHVKUo&quot;</span>,</span><br><span class="line">        <span class="string">&quot;StartEpoch&quot;</span>: <span class="number">737230</span>,</span><br><span class="line">        <span class="string">&quot;endEpoch&quot;</span>: <span class="number">2033862</span>,</span><br><span class="line">        <span class="string">&quot;StoragePricePerEpoch&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ProviderCollateral&quot;</span>: <span class="string">&quot;9039263001107346&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ClientCollateral&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;ClientSignature&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;Type&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;Signature&quot;</span>: <span class="string">&quot;/swH/TYtX+83l059ghKjDv2DhygRJ0ZXqI8zTUS5k71x6p5R/SbNhl4Jx4gMvC6hO1JeoUZmW0GahUlqTnz/wwE=&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Proposal&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;PieceCID&quot;</span>: <span class="string">&quot;baga6ea4seaqa4mo577aqlx4ryfjwfjwi2klsos2kginwu5eafnt5axuytbjjyjq&quot;</span>,</span><br><span class="line">        <span class="string">&quot;PieceSize&quot;</span>: <span class="number">34359738368</span>,</span><br><span class="line">        <span class="string">&quot;VerifiedDeal&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;Client&quot;</span>: <span class="string">&quot;f1jttpq32myxfb3dt3ybytfyigvpltsjqssx427ai&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Provider&quot;</span>: <span class="string">&quot;f0228712&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Label&quot;</span>: <span class="string">&quot;mAXCg5AIgOaXh/tq8OK1oqadZZL/F3tnYNm054yQaFoCCJJtllOk&quot;</span>,</span><br><span class="line">        <span class="string">&quot;StartEpoch&quot;</span>: <span class="number">737230</span>,</span><br><span class="line">        <span class="string">&quot;endEpoch&quot;</span>: <span class="number">2033862</span>,</span><br><span class="line">        <span class="string">&quot;StoragePricePerEpoch&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ProviderCollateral&quot;</span>: <span class="string">&quot;9039263001107346&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ClientCollateral&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;ClientSignature&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;Type&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;Signature&quot;</span>: <span class="string">&quot;MtTkzrjUpShs4XKGFKBk+SJihFFVQuAK5lni62ZmZR8Jucd6poY4ScRZfHRQHVj5gMGNEU5uS7/s09AvCAjtCwE=&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;IDs&quot;</span>: [</span><br><span class="line">    <span class="number">1613103</span>,</span><br><span class="line">    <span class="number">1613104</span>,</span><br><span class="line">    <span class="number">1613105</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数返回值解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> PublishStorageDealsParams <span class="keyword">struct</span> &#123;</span><br><span class="line">Deals []ClientDealProposal</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> PublishStorageDealsReturn <span class="keyword">struct</span> &#123;</span><br><span class="line">IDs []abi.DealID</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> ClientDealProposal <span class="keyword">struct</span> &#123;</span><br><span class="line">Proposal        DealProposal</span><br><span class="line">ClientSignature acrypto.Signature</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> DealProposal <span class="keyword">struct</span> &#123;</span><br><span class="line">PieceCID     cid.Cid <span class="string">`checked:&quot;true&quot;`</span> <span class="comment">// Checked in validateDeal, CommP</span></span><br><span class="line">PieceSize    abi.PaddedPieceSize</span><br><span class="line">VerifiedDeal <span class="keyword">bool</span></span><br><span class="line">Client       addr.Address</span><br><span class="line">Provider     addr.Address</span><br><span class="line"></span><br><span class="line"><span class="comment">// Label is an arbitrary client chosen label to apply to the deal</span></span><br><span class="line">Label <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Nominal start epoch. Deal payment is linear between StartEpoch and EndEpoch,</span></span><br><span class="line"><span class="comment">// with total amount StoragePricePerEpoch * (EndEpoch - StartEpoch).</span></span><br><span class="line"><span class="comment">// Storage deal must appear in a sealed (proven) sector no later than StartEpoch,</span></span><br><span class="line"><span class="comment">// otherwise it is invalid.</span></span><br><span class="line">StartEpoch           abi.ChainEpoch</span><br><span class="line">EndEpoch             abi.ChainEpoch</span><br><span class="line">StoragePricePerEpoch abi.TokenAmount</span><br><span class="line"></span><br><span class="line">ProviderCollateral abi.TokenAmount</span><br><span class="line">ClientCollateral   abi.TokenAmount</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> Signature <span class="keyword">struct</span> &#123;</span><br><span class="line">Type SigType</span><br><span class="line">Data []<span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodePublishStorageDeals</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacecf2mymfgzdfmi3xqmrwhsilpsp7oxp4xvxlrdxlq7i52sycgec3w&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">nil</span> != err &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    messagea, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    byHeight, err := apii.ChainGetTipSetByHeight(c, abi.ChainEpoch(<span class="number">5994432</span>), types.EmptyTSK)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    replay, err := apii.StateReplay(c, byHeight.Key(), messagea.Cid())</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> deal market.PublishStorageDealsParams</span><br><span class="line">    err = deal.UnmarshalCBOR(bytes.NewReader(messagea.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    err = deal.UnmarshalCBOR(bytes.NewReader(messagea.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(deal.Deals[<span class="number">0</span>].ClientSignature,deal.Deals[<span class="number">0</span>].Proposal)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> dealReturn market.PublishStorageDealsReturn</span><br><span class="line">    err = dealReturn.UnmarshalCBOR(bytes.NewReader(replay.MsgRct.Return))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(dealReturn)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="26-RepayDebt"><a href="#26-RepayDebt" class="headerlink" title="26.RepayDebt"></a>26.RepayDebt</h3><h4 id="目的描述：-25"><a href="#目的描述：-25" class="headerlink" title="目的描述："></a>目的描述：</h4><p>偿还矿工的债务</p><p>假如发送方为A,接收方为B,f099为C，消息value为A转给B的转账金额，则有</p><blockquote><p>A=========&gt;B============&gt;C      (B转账给C初步推测是欠多少给多少)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">无</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="27-ReportConsensusFault"><a href="#27-ReportConsensusFault" class="headerlink" title="27.ReportConsensusFault"></a>27.ReportConsensusFault</h3><h4 id="目的描述：-26"><a href="#目的描述：-26" class="headerlink" title="目的描述："></a>目的描述：</h4><p>报告共识错误：</p><p>假如发送方为A,接收方为B,f099为C，则有</p><blockquote><p>B===========&gt;C  (转出的金额占比大)</p><p>B============&gt;A</p></blockquote><h4 id="官方代码注解：-10"><a href="#官方代码注解：-10" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>// Note: only the first reporter of any fault is rewarded.<br>   // Subsequent invocations fail because the target miner has been removed.<br>1.注意：只有任何故障的第一个报告者都将得到奖励。后续调用失败，因为已删除目标矿机。</p><p>// Elapsed since the fault (i.e. since the higher of the two blocks)<br>2.自故障以来经过的时间（即自两个块中的较高者起）</p><p>// Reward reporter with a share of the miner’s current balance.<br>3.用矿工当前余额的一部分奖励记者。</p><p>// Notify power actor with lock-up total being removed.<br>4.通知功率执行器，并移除锁定总量。</p><p>// close deals and burn funds<br>5.达成交易并消耗资金</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;BlockHeader1&quot;</span>: <span class="string">&quot;kEQA7oUIgVhgk+tmEc6DFMKbveRDnHduz7k74iwe/OnLoT1TwdI8ioe0NbOhNe/q+ByU9jHbjl9JB7j+sl8pZpPey9S+XTo0PNHqqrtMIPjZyyysiepoQ9Y81WJ4JOS3tBVk5xZWHgksggFYYImsY7bvoxn9fCz0ooSS75YmGUL9AZg6s9vdpgkL7lyaDAgCZpd9eSNJe7ice3DDmwzYLk1XOSdwgGDaqtZrMPgXAwx73DKk09HFeZWnhAj29BCZipSD3HcQnNv3MiYvMYGCGgAKTSBYYKyuHtXzmQK65JMoYGDlJwnXr2zT/tPqeSVl0B4Pw5yU3soU428+iGMALXgkqtICwRjTACPfpaTHE1vfqB2ESag8bV/HugZQFrbIdrkX84fJMXcLRpwriSbzIBu80718loGCBFjAkCmIJEr1vhPQ7rskCFxWA2go4p+ip0mzWngRtABAssoS9zRwkr6T1wxj2KHpToZwlkna/9oNZbPFTQEXUdRWPrwy1733wENtfP5aBhLRJN6+mIYm1m2Fp2x8IsIy8qOVGI8xvumXu+74bQewqPtAcGy9xt89yYq2+fLeN4WWTCDUql4TlKf/AZ+rsgyPSFd4qNv4rSMDffBGDD0l+3AZ5o+ymCqjdXkvi44uq0JRCabu6tydPSUjbDGgs9kdvEqShdgqWCcAAXGg5AIgb3OXUK1wHCIM5ZxSq+oGujGA6AkDx84MG6+1jIfqki7YKlgnAAFxoOQCIKaLd2TP1w4A1sZF6vP4xiyxq6k/nHG65k03oscJzIyF2CpYJwABcaDkAiB54880YIWIKU4S9H1LriolQPkBgCaCpiiuLInNWr0SZtgqWCcAAXGg5AIghOFYoU6VMKLhF/7q3botODf6pO80kTWqshWMT3aRZW3YKlgnAAFxoOQCIKYMotY5aVf9IppugGnyBGbIAgR3YZiv8coF3wjwT4oPRgAC9rGiaBoACNa82CpYJwABcaDkAiDi+MoXeMV8v8S1sSUrstzzZAaNJiS/W7kApxb8+Qu/LNgqWCcAAXGg5AIgcaTKCXHNLZofK+1oowHeUlxIPYn1BYLOIeRLIc/xt3rYKlgnAAFxoOQCIKOSOPku5P7hSiIoZwK+B7PMFYcIGf2FzN7hOvESdqqAWGECl4SpcM+Vys4uNT+WdC+Rn1jSbiJFtE8GlfFl4M8x4UFXQP6LLKq50cJHmRaX5rveB7H3fKRAXCGW4VbjLb9uudQiQGN6D7iL6CZET91QZOJllT3M+VFKmK7+Zbz38BSeGmBNYmhYYQKG4YmV+ZBOy8jop1QbksjtfPOoYXr1N/t8dSUU0bnSyfDUfrZJifGW6AHV4QoMd7AEqsaye/IkscQvwFHUmRkT4Ow9my+p9o8s27KvlGVjyOzvONJPlEET/CAQFuv69XsARQBcAQrN&quot;</span>,</span><br><span class="line">  <span class="string">&quot;BlockHeader2&quot;</span>: <span class="string">&quot;kEQA7oUIgVhgk+tmEc6DFMKbveRDnHduz7k74iwe/OnLoT1TwdI8ioe0NbOhNe/q+ByU9jHbjl9JB7j+sl8pZpPey9S+XTo0PNHqqrtMIPjZyyysiepoQ9Y81WJ4JOS3tBVk5xZWHgksggFYYImsY7bvoxn9fCz0ooSS75YmGUL9AZg6s9vdpgkL7lyaDAgCZpd9eSNJe7ice3DDmwzYLk1XOSdwgGDaqtZrMPgXAwx73DKk09HFeZWnhAj29BCZipSD3HcQnNv3MiYvMYGCGgAKTSBYYKyuHtXzmQK65JMoYGDlJwnXr2zT/tPqeSVl0B4Pw5yU3soU428+iGMALXgkqtICwRjTACPfpaTHE1vfqB2ESag8bV/HugZQFrbIdrkX84fJMXcLRpwriSbzIBu80718loGCBFjAhr2sm/cgU/Sxg53wgTZ+IUc0meq4EYzSxArUbV9h3zpfHBPsWVugfaKCTny75fInr8mObyRKFbUbSIPmM9IKr/zMOaf1GDljvyYxxN3HEqbJbiew8s8CCegX5w+4UhofFNtusM13GDKhj2XHUmYDORZp2NAJmOGwoQlImFUoSABQSJqiLT2JcsiIGAuyRnRErUK3227pHtp5+eI7LOh8DCV/WTI26Jm368LZF6gmmfhAc5Bs0y9xWF38JQ1S5GxchdgqWCcAAXGg5AIgb3OXUK1wHCIM5ZxSq+oGujGA6AkDx84MG6+1jIfqki7YKlgnAAFxoOQCIKaLd2TP1w4A1sZF6vP4xiyxq6k/nHG65k03oscJzIyF2CpYJwABcaDkAiB54880YIWIKU4S9H1LriolQPkBgCaCpiiuLInNWr0SZtgqWCcAAXGg5AIghOFYoU6VMKLhF/7q3botODf6pO80kTWqshWMT3aRZW3YKlgnAAFxoOQCIKYMotY5aVf9IppugGnyBGbIAgR3YZiv8coF3wjwT4oPRgAC9rGiaBoACNa82CpYJwABcaDkAiDi+MoXeMV8v8S1sSUrstzzZAaNJiS/W7kApxb8+Qu/LNgqWCcAAXGg5AIgcaTKCXHNLZofK+1oowHeUlxIPYn1BYLOIeRLIc/xt3rYKlgnAAFxoOQCIINtGjb9VMSaZb5MEmHhjprkSQOpqT7sLXfXFhoFDEZOWGECkEzNSFTTvZdgsNKrXtKPee904kLafAEdlUDyF8h1oLHAjfbdNgh78DlAsUeVh2qKC3EPaHtMew2p+saY4pwDzV4mywYPadf1gVgU3oXMrTCXt30OPqrFfHUmoIV6wmX8GmBNYmhYYQKkZNggIPZpndPot4CT5BalL3Y9PYh6e3xH6zRnPVcgOLU0ZodkNAO0d98GDN/ys1EPObrlmKSsILk14UuWzUvcN5jG/ksu+lpP3l6LyyZhMaMtczFeS3Y13m/a6UxcUlsARQBcAQrN&quot;</span>,</span><br><span class="line">  <span class="string">&quot;BlockHeaderExtra&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line">无</span><br></pre></td></tr></table></figure><p>参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ReportConsensusFaultParams <span class="keyword">struct</span> &#123;</span><br><span class="line">BlockHeader1     []<span class="keyword">byte</span></span><br><span class="line">BlockHeader2     []<span class="keyword">byte</span></span><br><span class="line">BlockHeaderExtra []<span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeReportConsensusFault</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacedasxczbtp73yunldbfia4wfn5qjzaw2mgqair36abpwdhpflmaf2&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc minerr.ReportConsensusFaultParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewReader(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="28-Send"><a href="#28-Send" class="headerlink" title="28.Send"></a>28.Send</h3><h4 id="目的描述：-27"><a href="#目的描述：-27" class="headerlink" title="目的描述："></a>目的描述：</h4><p>用于转账，消息value值即为转账金额，一般创建普通用户的时间与第一次往该账户转账的消息时间相同</p><p>普通转账，将金额 <em>Value</em> 从 <em>From</em> 转移到 <em>To</em>。</p><h4 id="调用参数-8"><a href="#调用参数-8" class="headerlink" title="调用参数"></a>调用参数</h4><p>任意字节串</p><h4 id="返回值-8"><a href="#返回值-8" class="headerlink" title="返回值"></a>返回值</h4><p>无</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">无</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="29-Settle"><a href="#29-Settle" class="headerlink" title="29.Settle"></a>29.Settle</h3><p>接收方均为支付通道</p><h4 id="目的描述：-28"><a href="#目的描述：-28" class="headerlink" title="目的描述："></a>目的描述：</h4><p>结清</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">无</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line">无</span><br></pre></td></tr></table></figure><hr><h3 id="30-SubmitWindowedPoSt"><a href="#30-SubmitWindowedPoSt" class="headerlink" title="30.SubmitWindowedPoSt"></a>30.SubmitWindowedPoSt</h3><h4 id="目的描述：-29"><a href="#目的描述：-29" class="headerlink" title="目的描述："></a>目的描述：</h4><p>矿工提交抽查信息。提交时空证明</p><h4 id="调用参数-9"><a href="#调用参数-9" class="headerlink" title="调用参数"></a>调用参数</h4><p> <em>Deadline</em> <em>Partitions</em> <em>Proofs</em> <em>ChainCommitEpoch</em> <em>ChainCommitRand</em></p><h4 id="返回值-9"><a href="#返回值-9" class="headerlink" title="返回值"></a>返回值</h4><p>无 </p><h4 id="官方代码注解：-11"><a href="#官方代码注解：-11" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>Invoked by miner’s worker address to submit their fallback post</p><p>由矿工的工作地址调用以提交其fallback post</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;Deadline&quot;</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="string">&quot;Partitions&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Index&quot;</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="string">&quot;Skipped&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;Proofs&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;PoStProof&quot;</span>: <span class="number">8</span>,</span><br><span class="line">      <span class="string">&quot;ProofBytes&quot;</span>: <span class="string">&quot;oWLjMjrTGC0Lr+2YEgbI5hWZDm2QNa2SHU0fb2uE9K4HkxllfihiHw4SNX4d5aN2gKZblKm8VdYLZh5R9bw9vHFQXUtF5909zict6vtMwg2RLmhVONmjwrYVAy+DzuxVDiiHsi57Q/Sx/FTZ7BqOnZf1KmKREv9c+mL/qWurFWRHgWez5o+TonjdehHmNhposTQxTSOpFeeAYBOWfhid2FTQ7Db16rKLrjliXfXJISOTC1nBBpkyTGJjGb6jE9r7&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;ChainCommitEpoch&quot;</span>: <span class="number">593732</span>,</span><br><span class="line">  <span class="string">&quot;ChainCommitRand&quot;</span>: <span class="string">&quot;EGJbvn3HjjoMkkIJtTvtlu4Exm5PxJUgq7cOP/58IG0=&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line">无</span><br></pre></td></tr></table></figure><p>参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SubmitWindowedPoStParams <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// The deadline index which the submission targets.</span></span><br><span class="line">Deadline <span class="keyword">uint64</span></span><br><span class="line"><span class="comment">// The partitions being proven.</span></span><br><span class="line">Partitions []PoStPartition</span><br><span class="line"><span class="comment">// Array of proofs, one per distinct registered proof type present in the sectors being proven.</span></span><br><span class="line"><span class="comment">// In the usual case of a single proof type, this array will always have a single element (independent of number of partitions).</span></span><br><span class="line">Proofs []proof.PoStProof</span><br><span class="line"><span class="comment">// The epoch at which these proofs is being committed to a particular chain.</span></span><br><span class="line">ChainCommitEpoch abi.ChainEpoch</span><br><span class="line"><span class="comment">// The ticket randomness on the chain at the ChainCommitEpoch on the chain this post is committed to</span></span><br><span class="line">ChainCommitRand abi.Randomness</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> PoStPartition <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// Partitions are numbered per-deadline, from zero.</span></span><br><span class="line">Index <span class="keyword">uint64</span></span><br><span class="line"><span class="comment">// Sectors skipped while proving that weren&#x27;t already declared faulty</span></span><br><span class="line">Skipped bitfield.BitField</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> PoStProof <span class="keyword">struct</span> &#123;</span><br><span class="line">PoStProof  abi.RegisteredPoStProof</span><br><span class="line">ProofBytes []<span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeSubmitWindowedPoSt</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzaceasif5qkctme4sa6crafmdogmgncggzuous5dzrl3exbbtremcjsy&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc minerr.SubmitWindowedPoStParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewReader(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="31-SwapSigner"><a href="#31-SwapSigner" class="headerlink" title="31.SwapSigner"></a>31.SwapSigner</h3><h4 id="目的描述：-30"><a href="#目的描述：-30" class="headerlink" title="目的描述："></a>目的描述：</h4><p>交换签名者</p><p>目前此类信息都报了错，错误信息例如：</p><blockquote><p>caller f09524 is not one of [f020286] (RetCode=8)               SysErrForbidden</p></blockquote><h4 id="官方代码注解：-12"><a href="#官方代码注解：-12" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>// Can only be called by the multisig wallet itself.</p><p>//只能由multisig钱包本身调用。</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;From&quot;</span>: <span class="string">&quot;f137sjdbgunloi7couiy4l5nc7pd6k2jmq32vizpy&quot;</span>,</span><br><span class="line">  <span class="string">&quot;To&quot;</span>: <span class="string">&quot;f1mkbuonewc5htwyodaoy3bhxgxo6o2oetdmr4uwq&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line">无</span><br></pre></td></tr></table></figure><p>参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SwapSignerParams <span class="keyword">struct</span> &#123;</span><br><span class="line">From addr.Address</span><br><span class="line">To   addr.Address</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeSwapSigner</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzaceas4ivprqbveyoua24sedjpzeamri3refwvskoibovto5gxb55kwg&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc multisig.SwapSignerParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewReader(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="32-TerminateSectors"><a href="#32-TerminateSectors" class="headerlink" title="32.TerminateSectors"></a>32.TerminateSectors</h3><p>此处消息接收方会转账给f099</p><h4 id="目的描述：-31"><a href="#目的描述：-31" class="headerlink" title="目的描述："></a>目的描述：</h4><p>终止交易和扇区</p><h4 id="官方代码注解：-13"><a href="#官方代码注解：-13" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Marks some sectors as terminated at the present epoch, earlier than their</span></span><br><span class="line"><span class="comment">// scheduled termination, and adds these sectors to the early termination queue.</span></span><br><span class="line"><span class="comment">// This method then processes up to AddressedSectorsMax sectors and</span></span><br><span class="line"><span class="comment">// AddressedPartitionsMax partitions from the early termination queue,</span></span><br><span class="line"><span class="comment">// terminating deals, paying fines, and returning pledge collateral. While</span></span><br><span class="line"><span class="comment">// sectors remain in this queue:</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  1. The miner will be unable to withdraw funds.</span></span><br><span class="line"><span class="comment">//  2. The chain will process up to AddressedSectorsMax sectors and</span></span><br><span class="line"><span class="comment">//     AddressedPartitionsMax per epoch until the queue is empty.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// The sectors are immediately ignored for Window PoSt proofs, and should be</span></span><br><span class="line"><span class="comment">// masked in the same way as faulty sectors. A miner terminating sectors in the</span></span><br><span class="line"><span class="comment">// current deadline must be careful to compute an appropriate Window PoSt proof</span></span><br><span class="line"><span class="comment">// for the sectors that will be active at the time the PoSt is submitted.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// This function may be invoked with no new sectors to explicitly process the</span></span><br><span class="line"><span class="comment">// next batch of sectors.</span></span><br><span class="line"></span><br><span class="line">将某些扇区标记为在当前时期终止，早于它们</span><br><span class="line"><span class="comment">//计划终止，并将这些扇区添加到早期终止队列中。</span></span><br><span class="line"><span class="comment">//然后此方法最多处理AddressedSectorsMax个扇区，</span></span><br><span class="line"><span class="comment">//提早终止队列中的AddressedPartitionsMax分区，</span></span><br><span class="line"><span class="comment">//终止交易，支付罚款并退还抵押物。尽管</span></span><br><span class="line"><span class="comment">//扇区保留在此队列中:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>矿工将无法提取资金。</span><br><span class="line"><span class="number">2.</span>链将处理多达AddressedSectorsMax个扇区，</span><br><span class="line"><span class="comment">//每个时期的AddressedPartitionsMax，直到队列为空。</span></span><br><span class="line"></span><br><span class="line">对于Window PoSt证明，将立即忽略该扇区，并且应将其设置为</span><br><span class="line"><span class="comment">//以与故障扇区相同的方式进行屏蔽。一个矿工终止了</span></span><br><span class="line"><span class="comment">//当前的截止日期必须谨慎以计算适当的Window PoSt证明</span></span><br><span class="line"><span class="comment">//对于在提交PoSt时将处于活动状态的扇区。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">可以在没有新扇区的情况下调用此函数来显式处理</span><br><span class="line"><span class="comment">//下一批扇区。</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;Terminations&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Deadline&quot;</span>: <span class="number">11</span>,</span><br><span class="line">      <span class="string">&quot;Partition&quot;</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="string">&quot;Sectors&quot;</span>: <span class="string">&quot;30950,31197&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;Done&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数返回值解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> TerminateSectorsParams <span class="keyword">struct</span> &#123;</span><br><span class="line">Terminations []TerminationDeclaration</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> TerminationDeclaration <span class="keyword">struct</span> &#123;</span><br><span class="line">Deadline  <span class="keyword">uint64</span></span><br><span class="line">Partition <span class="keyword">uint64</span></span><br><span class="line">Sectors   bitfield.BitField</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> TerminateSectorsReturn <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// Set to true if all early termination work has been completed. When</span></span><br><span class="line"><span class="comment">// false, the miner may choose to repeatedly invoke TerminateSectors</span></span><br><span class="line"><span class="comment">// with no new sectors to process the remainder of the pending</span></span><br><span class="line"><span class="comment">// terminations. While pending terminations are outstanding, the miner</span></span><br><span class="line"><span class="comment">// will not be able to withdraw funds.</span></span><br><span class="line">Done <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeTerminateSectors</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacea2vi7x7dnxy2dn3f6jkhj7itjltofkqittuqhcjkvbzylijpiof4&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc minerr.TerminateSectorsParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewReader(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line">    tipset, err := apii.ChainGetTipSetByHeight(c, abi.ChainEpoch(<span class="number">594247</span>), types.EmptyTSK)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    replay, err := apii.StateReplay(c, tipset.Key(), decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> aa minerr.TerminateSectorsReturn</span><br><span class="line">    err = aa.UnmarshalCBOR(bytes.NewBuffer(replay.MsgRct.Return))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(aa)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="33-UpdateChannelState"><a href="#33-UpdateChannelState" class="headerlink" title="33.UpdateChannelState"></a>33.UpdateChannelState</h3><h4 id="目的描述：-32"><a href="#目的描述：-32" class="headerlink" title="目的描述："></a>目的描述：</h4><p>更新支付通道状态</p><h4 id="官方代码注释：-2"><a href="#官方代码注释：-2" class="headerlink" title="官方代码注释："></a>官方代码注释：</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// both parties must sign voucher: one who submits it, the other explicitly signs it</span></span><br><span class="line">双方必须签署凭证：一个人提交凭证，另一方明确签署凭证</span><br><span class="line"></span><br><span class="line"><span class="comment">// Find the voucher lane, creating if necessary.</span></span><br><span class="line">找到凭证通道，必要时创建。</span><br><span class="line"></span><br><span class="line"><span class="comment">// The next section actually calculates the payment amounts to update the payment channel state</span></span><br><span class="line">下一部分实际计算付款金额以更新付款渠道状态/</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. (optional) sum already redeemed value of all merging lanes</span></span><br><span class="line"><span class="comment">// 1.（可选）所有合并通道的已赎回值总和</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. To prevent double counting, remove already redeemed amounts (from voucher or other lanes) from the voucher amount</span></span><br><span class="line"><span class="comment">// 2.为防止重复计算，请从中删除已兑换的金额（从优惠券/凭证金额中的//优惠券/凭证或其他通道）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. set new redeemed value for merged-into lane</span></span><br><span class="line"><span class="comment">// 3.为合并入车道设置新的赎回值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. check operation validity</span></span><br><span class="line"><span class="comment">// 4.检查操作有效性</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 5. add new redemption ToSend</span></span><br><span class="line"><span class="comment">// 5.添加新的兑换ToSend</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// update channel settlingAt and MinSettleHeight if delayed by voucher</span></span><br><span class="line">如果凭证延迟，则更新频道settlingAt和MinSettleHeight</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;Sv&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;ChannelAddr&quot;</span>: <span class="string">&quot;f2eyy7thzvqkryhhtieacpy7eghm3w7yogtdr7a7q&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TimeLockMin&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;TimeLockMax&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;SecretPreimage&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Extra&quot;</span>: null,</span><br><span class="line">    <span class="string">&quot;Lane&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;Nonce&quot;</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="string">&quot;Amount&quot;</span>: <span class="string">&quot;115396630&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MinSettleHeight&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;Merges&quot;</span>: [],</span><br><span class="line">    <span class="string">&quot;Signature&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;Type&quot;</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="string">&quot;Signature&quot;</span>: <span class="string">&quot;kc8Q1poJSz+7pQQUiEU4LQX2B8HO1jhWBRBE+nHaeEcFr6G1ZBiwh3ivQ0HHBU4iE9tMUQZAmuGtOOIDBIntnDJonxPlY+Q5wakC+E70B7R30lssSdhMAcCyvWP0NkLy&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;Secret&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> UpdateChannelStateParams <span class="keyword">struct</span> &#123;</span><br><span class="line">Sv     SignedVoucher</span><br><span class="line">Secret []<span class="keyword">byte</span></span><br><span class="line">&#125;<span class="comment">//需注意，有不同的版本，调错包会解析错误</span></span><br><span class="line"><span class="comment">// A voucher is sent by `From` to `To` off-chain in order to enable</span></span><br><span class="line"><span class="comment">// `To` to redeem payments on-chain in the future</span></span><br><span class="line"><span class="keyword">type</span> SignedVoucher <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// ChannelAddr is the address of the payment channel this signed voucher is valid for</span></span><br><span class="line">ChannelAddr addr.Address</span><br><span class="line"><span class="comment">// TimeLockMin sets a min epoch before which the voucher cannot be redeemed</span></span><br><span class="line">TimeLockMin abi.ChainEpoch</span><br><span class="line"><span class="comment">// TimeLockMax sets a max epoch beyond which the voucher cannot be redeemed</span></span><br><span class="line"><span class="comment">// TimeLockMax set to 0 means no timeout</span></span><br><span class="line">TimeLockMax abi.ChainEpoch</span><br><span class="line"><span class="comment">// (optional) The SecretPreImage is used by `To` to validate</span></span><br><span class="line">SecretPreimage []<span class="keyword">byte</span></span><br><span class="line"><span class="comment">// (optional) Extra can be specified by `From` to add a verification method to the voucher</span></span><br><span class="line">Extra *ModVerifyParams</span><br><span class="line"><span class="comment">// Specifies which lane the Voucher merges into (will be created if does not exist)</span></span><br><span class="line">Lane <span class="keyword">uint64</span></span><br><span class="line"><span class="comment">// Nonce is set by `From` to prevent redemption of stale vouchers on a lane</span></span><br><span class="line">Nonce <span class="keyword">uint64</span></span><br><span class="line"><span class="comment">// Amount voucher can be redeemed for</span></span><br><span class="line">Amount big.Int</span><br><span class="line"><span class="comment">// (optional) MinSettleHeight can extend channel MinSettleHeight if needed</span></span><br><span class="line">MinSettleHeight abi.ChainEpoch</span><br><span class="line"></span><br><span class="line"><span class="comment">// (optional) Set of lanes to be merged into `Lane`</span></span><br><span class="line">Merges []Merge</span><br><span class="line"></span><br><span class="line"><span class="comment">// Sender&#x27;s signature over the voucher</span></span><br><span class="line">Signature *crypto.Signature</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Modular Verification method</span></span><br><span class="line"><span class="keyword">type</span> ModVerifyParams <span class="keyword">struct</span> &#123;</span><br><span class="line">Actor  addr.Address</span><br><span class="line">Method abi.MethodNum</span><br><span class="line">Data   []<span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> Merge <span class="keyword">struct</span> &#123;</span><br><span class="line">Lane  <span class="keyword">uint64</span></span><br><span class="line">Nonce <span class="keyword">uint64</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> Signature <span class="keyword">struct</span> &#123;</span><br><span class="line">Type SigType</span><br><span class="line">Data []<span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeUpdateChannelState</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzacebotu3436hjgtzka32qtqusq7jhyx3vpbfsg3iq7vyjkmxdgh3fjg&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    tipSet, err := apii.ChainGetTipSetByHeight(c, abi.ChainEpoch(<span class="number">414829</span>), types.EmptyTSK)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    params, err := apii.StateDecodeParams(c, message.To, message.Method, message.Params, tipSet.Key())</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(params)</span><br><span class="line">    <span class="keyword">var</span> cc paych.UpdateChannelStateParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewReader(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="34-WithdrawBalance-market"><a href="#34-WithdrawBalance-market" class="headerlink" title="34.WithdrawBalance (market)"></a>34.WithdrawBalance (market)</h3><p>提款余额（市场）：<br>消息接收方为f05，此类消息用于取出余额，由f05给消息发送方转账，转账金额为消息参数中的Amount值，Address为消息发送方</p><h4 id="目的描述：-33"><a href="#目的描述：-33" class="headerlink" title="目的描述："></a>目的描述：</h4><p>尝试从托管的余额中提取指定的金额。 如果少于指定的可用数量，则产生全部可用余额。</p><h4 id="官方代码注解：-14"><a href="#官方代码注解：-14" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>// Attempt to withdraw the specified amount from the balance held in escrow.<br>// If less than the specified amount is available, yields the entire available balance.</p><p>尝试从托管的余额中提取指定的金额。 如果少于指定的可用数量，则产生全部可用余额。</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;Address&quot;</span>: <span class="string">&quot;f3u4vfats72x236ylbnhxgajit2cyliq7ehwe7b2x42ayfwlwyohoaeym6gm6cwlx2df5z5jripvftaiwm5ila&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Amount&quot;</span>: <span class="string">&quot;90000000000000000000&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> WithdrawBalanceParams <span class="keyword">struct</span> &#123;</span><br><span class="line">ProviderOrClientAddress addr.Address</span><br><span class="line">Amount                  abi.TokenAmount</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeWithdrawBalancemarket</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzaceduitn67vyfij75nzpmy4k4m7qk3tlsutuzzjt5thyzxeeox6rzzg&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc market.WithdrawBalanceParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewReader(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="35-WithdrawBalance-miner"><a href="#35-WithdrawBalance-miner" class="headerlink" title="35.WithdrawBalance (miner)"></a>35.WithdrawBalance (miner)</h3><p>提款余额（矿工）：<br>消息接收方为矿工，此类消息用于取出余额，由矿工给消息发送方转账，转账金额为消息参数中的AmountRequested值。</p><h4 id="目的描述：-34"><a href="#目的描述：-34" class="headerlink" title="目的描述："></a>目的描述：</h4><p>将矿工地址内的余额提取至 Owner 地址，提取的金额为 <em>AmountRequested</em> 与 <em>AvailableBalance</em> 的较小值，具体金额可在 <em>InternalExecutions</em> 中获取。</p><h4 id="调用参数-10"><a href="#调用参数-10" class="headerlink" title="调用参数"></a>调用参数</h4><p> <em>AmountRequested</em> 希望提取的金额。</p><h4 id="返回值-10"><a href="#返回值-10" class="headerlink" title="返回值"></a>返回值</h4><p>无</p><h4 id="官方代码注解：-15"><a href="#官方代码注解：-15" class="headerlink" title="官方代码注解："></a>官方代码注解：</h4><blockquote><p>1.由于拥有者属于/受其控制，因此仅所有者可以提取余额，而不是work。<br>2.确保我们没有任何未决的终止。<br>3.释放既有资金，以便我们可以花费它们。<br>4.验证InitialPledgeRequirement是否不超过解锁资金</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">eg:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;AmountRequested&quot;</span>: <span class="string">&quot;111000000000000000000&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">返回值：</span><br></pre></td></tr></table></figure><p>参数解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> WithdrawBalanceParams <span class="keyword">struct</span> &#123;</span><br><span class="line">AmountRequested abi.TokenAmount</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decodeWithdrawBalanceminer</span><span class="params">(c context.Context, apii api.FullNode)</span></span> &#123;</span><br><span class="line">    decode, err := cid.Decode(<span class="string">&quot;bafy2bzaceb25aj2vqqfvhfy3zj5umcorznp7ggi3fud34g4ipvqshnqnem6zi&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    message, err := apii.ChainGetMessage(c, decode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> cc minerr.WithdrawBalanceParams</span><br><span class="line">    err = cc.UnmarshalCBOR(bytes.NewReader(message.Params))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cc)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-AddBalance&quot;&gt;&lt;a href=&quot;#1-AddBalance&quot; class=&quot;headerlink&quot; title=&quot;1.AddBalance&quot;&gt;&lt;/a&gt;1.AddBalance&lt;/h3&gt;&lt;p&gt;接收方均为f05，消息发送方给f05转账&lt;/p&gt;
&lt;h4 i</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>矿工和用户怎样合作共赢</title>
    <link href="http://example.com/%E7%9F%BF%E5%B7%A5%E5%92%8C%E7%94%A8%E6%88%B7%E6%80%8E%E6%A0%B7%E5%90%88%E4%BD%9C%E5%85%B1%E8%B5%A2/"/>
    <id>http://example.com/%E7%9F%BF%E5%B7%A5%E5%92%8C%E7%94%A8%E6%88%B7%E6%80%8E%E6%A0%B7%E5%90%88%E4%BD%9C%E5%85%B1%E8%B5%A2/</id>
    <published>2021-03-24T03:29:33.687Z</published>
    <updated>2021-03-24T03:29:35.517Z</updated>
    
    <content type="html"><![CDATA[<p>一、简介</p><p>Filecoin网络通过允许任何人作为存储提供商参与实现了规模经济。目前，该网络由分布在全球各地的数百家存储提供商组成。内容寻址和加密存储证明验证了数据在矿工的硬件上长期正确安全地存储，从而创造了一个强大可靠的服务。</p><p><img src="https://n.sinaimg.cn/sinakd2021317s/402/w1281h721/20210317/909b-kmkptxe3680519.png" alt="img"></p><p>这篇博文涵盖了Filecoin中两种类型交易的基本阶段，即存储交易和检索交易，并详细介绍了它们的生命周期。并解释了密码学证明是如何用于验证系统中的参与者是否按照承诺履行职责的。</p><p>二、Filecoin的数据</p><p>为了在Filecoin上存储文件，用户必须首先在其本地Filecoin节点中导入文件。这一步会产生一个数据CID——内容标识符，唯一描述该内容的ID，之后数据会传输给矿工。另一种在Filecoin上存储文件的方式是通过离线交易，这在本篇文章中没有涉及。</p><p>将数据导入本地的Filecoin节点，可以使用lotus客户端导入命令。记住生成的数据CID很重要（以后在本地节点上也可以使用），因为以后从矿工那里检索数据时必须用到它。</p><p>将数据导入本地节点后，用户必须发起交易。这可以通过lotus客户端交易命令来完成。该命令以数据CID作为输入，生成Filecoin Piece，并交互式地带领用户完成存储交易流程，详见下文。</p><p>Filecoin Piece是用户存储在Filecoin网络上的数据的主要协商单位。Filecoin Piece没有特定的大小，但受网络参数的制约，受扇区大小的上限。如果一个Filecoin Piece大于矿工支持的扇区大小，那么它必须被分割成更多的碎片，以便每个碎片都适合一个扇区。</p><p><img src="https://n.sinaimg.cn/sinakd2021317s/77/w553h324/20210317/8840-kmkptxe3680516.png" alt="img"></p><p>一个Filecoin Piece就是一个CAR文件，包含一个IPLD DAG，有对应的数据和Piece CID。</p><p>CAR即内容可寻址档案（Content Addressable aRchives）—— 每个 CAR 文件是一个 IPLD DAG 的序列化表示，即将其数据块串起来，再加上描述DAG图的头部信息（还有 根CID）。</p><p>当用户想要在Filecoin网络中存储文件时，首先要用UnixFS生成文件的IPLD DAG（这就是lotus客户端导入命令的作用）。代表DAG根节点的哈希是一个IPFS风格的CID，称为数据CID。</p><p>UnixFS是一种基于protobuf的格式，用于描述IPFS中的文件、目录和符号链接。在Filecoin中，UnixFS被用作提交给Filecoin网络的文件格式。</p><p>所产生的CAR文件用额外的零位来填充，以便使文件成为二进制的merkle树。</p><p>三、仓储交易流程</p><p>用户可以通过交易在Filecoin网络中存储数据，并从Filecoin网络中检索数据。网络中的参与者，包括矿工（供应方）和用户（需求方），通过存储交易和检索交易进行互动。</p><p>一个存储交易的生命周期如下：</p><p>\1. 发现</p><p>用户识别矿工并确定他们当前的要价，即矿工为了接受交易而希望收到的每GiB每纪元（30秒）的价格，单位为attoFIL（1 attoFIL等于10^-18 * FIL）。目前，Filecoin中一笔交易的最短期限为180天。</p><p>您可以通过 JSON RPC API 查询已同步的节点，列出所有当前活跃的矿工（为了测试目的，使用了公共终端节点，使用Filecoin.StateListMiners方法。</p><p><img src="https://n.sinaimg.cn/sinakd2021317s/778/w554h224/20210317/7f66-kmkptxe3680610.png" alt="img"></p><p>您可以根据矿工在网络中的信誉和能力进行选择。矿工的信誉指标还未进入 Filecoin 协议，本文亦不涉及。</p><p>一旦你选择了一个特定的矿工，你需要获取它的PeerID，例如用Filecoin.StateMinerInfo方法，通过libp2p协议与他们建立安全连接。</p><p><img src="https://n.sinaimg.cn/sinakd2021317s/738/w554h184/20210317/b588-kmkptxe3680611.png" alt="img"></p><p>然后你可以用Filecoin.ClientQueryAsk方法查询一个签名的StorageAsk。这将建立一个与所选矿工的直接libp2p连接，并询问存储报价。</p><p><img src="https://n.sinaimg.cn/sinakd2021317s/364/w554h610/20210317/edc7-kmkptxe3680679.png" alt="img"></p><p>结果包括这个矿工愿意接受的交易细节，比如接纳的Filecoin Piece大小的范围和每GiB每纪元的价格。需要注意的是，提出与矿工的存储要求相匹配的存储交易建议是一个前提条件，但不足以确保交易被接受——存储提供商可能会在之后运行自己的决策逻辑。</p><p>\2. 协商和数据发送</p><p>在这一阶段，双方就交易条款达成协议，如交易成本、交易期限、交易起始时间等。然后将数据从客户端转移到矿机上。</p><p>\3. 发布</p><p>通过PublishStorageDeals消息在链上发布交易，使存储提供商对交易公开负责。</p><p>\4. 完成</p><p>交易在链上发布后，就会交给存储挖掘子系统，打包成一个扇区，随后进行封装，随后不断证明可用。</p><p>四、存储挖矿子系统</p><p>存储挖矿子系统确保 Filecoin 网络的数据由矿工有效保存，并且：</p><p>1.参与Filecoin存储市场，承接客户端数据，参与存储交易。</p><p>2.参与Filecoin存储力共识，验证并生成区块，以壮大Filecoin区块链，并以此赚取区块奖励和费用。</p><p>它监督以下流程：</p><p>承诺新存储和注册新扇区</p><p>为了在Filecoin中注册一个扇区，矿工必须对该扇区进行封装。封装过程需要大量计算，以证明的形式产生数据的唯一表示，称为复制证明或PoRep。一旦产生证明，矿工将其压缩并将结果提交给区块链。这就证明矿工确实复制了他们同意存储的数据副本。</p><p>持续证明存储</p><p>每个存储矿工都必须不断地在链上提交证明，以证明扇区被完整存储。</p><p>宣布存储故障并从故障中恢复</p><p>如果某部门未能提交上述证明，将导致故障，矿工将受到处罚。</p><p>五、矿工和用户注意事项</p><p>如上所述，存储交易是在链上发布后，才会被激活和封装。这一点很重要，因为发布交易会将用户的资金锁定在链上托管。只有如此，在封存数据进扇区之后，矿工的收益才有保障。</p><p>把在链上发布交易看成是签署合同，把封存和激活交易看成是开始做矿工承诺的工作，是有帮助的。</p><p>从想要在Filecoin上存储数据的用户的角度来看，交易大致经过以下几个阶段：</p><p>\1. 资金交易：用户将资金锁定在托管中。</p><p>\2. 向矿工提出交易建议。</p><p>\3. 检查意向接受交易。</p><p>\4. 将交易的数据传输给矿工：这是通过GraphSync协议完成的。</p><p>\5. 检查是否接受：确保矿工已经接受了交易并在链上发布。</p><p>\6. 封装：交易正在进行中，矿工目前正在密封包含该交易的部门。</p><p>\7. 激活：交易已被封存并处于活跃状态。</p><p>从通过存储用户数据为用户提供服务的矿工的角度来看，交易大致经过以下几个阶段：</p><p>\1. 验证交易：收到交易提案，并检查其参数（规模、价格等）。</p><p>\2. 检查是否锁定资金：确保用户有锁定的资金，可以支付交易。</p><p>\3. 等待数据：收到用户提供的交易数据。</p><p>\4. 在链<a href="javascript:;">上为</a>交易提供抵押物。</p><p>\5. 在链上发布交易上链。</p><p>\6. 封装扇区。</p><p>\7. 激活交易：从这里开始，矿工定期提交时空证明，证明他们正在持续存储数据。</p><p>六、检索交易流程</p><p>检索交易与存储交易不同，使用支付通道，主要链下完成。数据传输是按量计价的，用户在数据传输的过程中逐步向矿工支付费用。整个过程，只有创建支付通道、兑换凭证，是涉及与Filecoin区块链交互的。</p><p>这是整体流程：</p><p>\1. 发现：用户识别拥有所需数据的矿工，并向他们索取检索报价——每字节价格、解封价格、支付间隔等。</p><p>\2. 支付通道设置：用户在他们和矿工之间设置一个支付通道（如果还没有的话）。</p><p>\3. 数据传输与支付：矿工向用户发送数据，直到需要支付。</p><p>此时用户还未获得完整数据。</p><p>七、时空证明</p><p>上面的章节快速列举了许多使 Filecoin 独一无二的细节，在概率上对用户数据提供了保证。本节介绍了 Filecoin 使用的两种证明，并解释了它们是如何成为协议的一部分，以及它们所解决的问题。</p><p>时空证明（PoSt）是矿工向 Filecoin 网络提交的证明，证明其正在继续为网络存储数据的唯一副本。</p><p>目前，时空证明在 Filecoin 中以两种类型存在：</p><p>\1. WinningPoSt</p><p>WinningPoSt是奖励存储矿工对 Filecoin 网络贡献的机制。在每个epoch开始时，一小部分存储矿工被选出来，每个矿工挖出一个新的区块。具体要求是，这些矿工提交指定扇区的压缩存储证明。每个成功创建区块的当选矿工都会获得FIL（区块奖励），以及向其他想在区块中包含信息的 Filecoin 参与者收取费用的机会。</p><p>存储矿工如果在必要的时间窗口内没按要求做到，将失去生产区块的机会，但不会因为没产出区块而受到其他惩罚。</p><p>\2. WindowPoStWindowPoSt是 Filecoin 区块链对存储矿工做出的承诺进行审核的机制。</p><p>每个存储矿工都应该维护他们的承诺扇区。这些扇区包含与用户达成的交易，或也可能为空。后者被称为承诺容量，也就是说，矿工可以做出容量承诺，用任意数据填充一个扇区，而非用户数据。维护这些扇区可以让存储矿工证明他们在网络预留空间。</p><p>每一天分成若干时间窗口，目前48个时间窗口，每个持续时间为30分钟（60个epoch，因为1个epoch等于30秒）。</p><p>每个矿工的承诺扇区分成若干组，每组对应一个时间窗口。</p><p>在一个时间窗（30分钟）内，每个存储矿工必须为其该时间窗中的每个扇区提交一份时空证明。这需要随时访问该时间窗轮到的每个扇区，并生成 zk-SNARK 证明加入区块发布到 Filecoin 区块链上。这样，每个承诺存储的扇区在每24小时内至少会被审核一次，并保留一个永久的、可验证的、公开的记录，证明每个存储矿工保守承诺。</p><p><img src="https://n.sinaimg.cn/sinakd2021317s/727/w553h174/20210317/c345-kmkptxe3680678.png" alt="img"></p><p>在上图例子中，您能看到一个矿工应该在 deadline 0 (&gt; 16TB)、deadline 1 (</p><p>Filecoin 网络期望所存储的数据持续可用。未能为一个扇区提交WindowPoSt将导致一个故障，而供应该扇区的存储矿工将被惩罚。这激励存储矿工健康运转。</p><p>八、故障</p><p>当证明在证明期内因网络连接丢失、存储故障或恶意行为导致证明未被纳入Filecoin区块链时，就会发生故障。</p><p>当一个扇区被标记为故障时，Filecoin网络将对本应存储该扇区的存储矿工进行处罚（从矿工预付的抵押币中支付）。</p><p>扇区故障费有三种：</p><p>\1. 扇区故障费：需由每个处于故障状态的扇区每天支付。该费用的大小略高于该扇区每天预计获得的区块奖励额。如果一个扇区连续2周以上处于故障状态，该扇区将支付终止费，并从区块链状态中移除。2. 扇区故障检测费：这是一次性支付的费用，如果该故障是由链上机制检测发现而非矿工诚实上报时收取。考虑到时空证明检查的概率性，该收费额设为对应扇区在若干天时间中的区块奖励。</p><p>\3. 扇区终止费：一个扇区可能因为故障或矿工主动而在到期日之前终止。收取的终止费原则上相当于一个扇区当前所产生的收益，且不超过一个限额，以免阻碍长时扇区。</p><p>在filecoin.io/网站上阅读更多于故障和处理故障的经济机制</p><p>九、结论</p><p>本文涵盖了与存储和检索Filecoin上的数据有关的一些概念，用户和矿工为实现这一目标而参与的协议，以及这一过程中涉及的各种证明和保证。</p><p>它从用户和矿工的角度详细介绍了存储和检索交易的流程，以及Filecoin协议在其中一方行为不当时实施的惩罚措施。</p><p>总而言之，本文概述了Filecoin协议如何管理Filecoin网络，从而形成一个可靠和去中心化的分布式网络。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一、简介&lt;/p&gt;
&lt;p&gt;Filecoin网络通过允许任何人作为存储提供商参与实现了规模经济。目前，该网络由分布在全球各地的数百家存储提供商组成。内容寻址和加密存储证明验证了数据在矿工的硬件上长期正确安全地存储，从而创造了一个强大可靠的服务。&lt;/p&gt;
&lt;p&gt;&lt;img src=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>所有消息类型</title>
    <link href="http://example.com/%E6%89%80%E6%9C%89%E6%B6%88%E6%81%AF%E7%B1%BB%E5%9E%8B/"/>
    <id>http://example.com/%E6%89%80%E6%9C%89%E6%B6%88%E6%81%AF%E7%B1%BB%E5%9E%8B/</id>
    <published>2021-03-24T03:29:25.955Z</published>
    <updated>2021-03-24T03:29:27.805Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> builtin</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/filecoin-project/go-state-types/abi&quot;</span></span><br><span class="line">builtin0 <span class="string">&quot;github.com/filecoin-project/specs-actors/actors/builtin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">MethodSend        = builtin0.MethodSend</span><br><span class="line">MethodConstructor = builtin0.MethodConstructor</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MethodsAccount = <span class="keyword">struct</span> &#123;</span><br><span class="line">Constructor   abi.MethodNum</span><br><span class="line">PubkeyAddress abi.MethodNum</span><br><span class="line">&#125;&#123;MethodConstructor, <span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MethodsInit = <span class="keyword">struct</span> &#123;</span><br><span class="line">Constructor abi.MethodNum</span><br><span class="line">Exec        abi.MethodNum</span><br><span class="line">&#125;&#123;MethodConstructor, <span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MethodsCron = <span class="keyword">struct</span> &#123;</span><br><span class="line">Constructor abi.MethodNum</span><br><span class="line">EpochTick   abi.MethodNum</span><br><span class="line">&#125;&#123;MethodConstructor, <span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MethodsReward = <span class="keyword">struct</span> &#123;</span><br><span class="line">Constructor      abi.MethodNum</span><br><span class="line">AwardBlockReward abi.MethodNum</span><br><span class="line">ThisEpochReward  abi.MethodNum</span><br><span class="line">UpdateNetworkKPI abi.MethodNum</span><br><span class="line">&#125;&#123;MethodConstructor, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MethodsMultisig = <span class="keyword">struct</span> &#123;</span><br><span class="line">Constructor                 abi.MethodNum</span><br><span class="line">Propose                     abi.MethodNum</span><br><span class="line">Approve                     abi.MethodNum</span><br><span class="line">Cancel                      abi.MethodNum</span><br><span class="line">AddSigner                   abi.MethodNum</span><br><span class="line">RemoveSigner                abi.MethodNum</span><br><span class="line">SwapSigner                  abi.MethodNum</span><br><span class="line">ChangeNumApprovalsThreshold abi.MethodNum</span><br><span class="line">LockBalance                 abi.MethodNum</span><br><span class="line">&#125;&#123;MethodConstructor, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MethodsPaych = <span class="keyword">struct</span> &#123;</span><br><span class="line">Constructor        abi.MethodNum</span><br><span class="line">UpdateChannelState abi.MethodNum</span><br><span class="line">Settle             abi.MethodNum</span><br><span class="line">Collect            abi.MethodNum</span><br><span class="line">&#125;&#123;MethodConstructor, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MethodsMarket = <span class="keyword">struct</span> &#123;</span><br><span class="line">Constructor              abi.MethodNum</span><br><span class="line">AddBalance               abi.MethodNum</span><br><span class="line">WithdrawBalance          abi.MethodNum</span><br><span class="line">PublishStorageDeals      abi.MethodNum</span><br><span class="line">VerifyDealsForActivation abi.MethodNum</span><br><span class="line">ActivateDeals            abi.MethodNum</span><br><span class="line">OnMinerSectorsTerminate  abi.MethodNum</span><br><span class="line">ComputeDataCommitment    abi.MethodNum</span><br><span class="line">CronTick                 abi.MethodNum</span><br><span class="line">&#125;&#123;MethodConstructor, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MethodsPower = <span class="keyword">struct</span> &#123;</span><br><span class="line">Constructor              abi.MethodNum</span><br><span class="line">CreateMiner              abi.MethodNum</span><br><span class="line">UpdateClaimedPower       abi.MethodNum</span><br><span class="line">EnrollCronEvent          abi.MethodNum</span><br><span class="line">OnEpochTickEnd           abi.MethodNum</span><br><span class="line">UpdatePledgeTotal        abi.MethodNum</span><br><span class="line">Deprecated1              abi.MethodNum</span><br><span class="line">SubmitPoRepForBulkVerify abi.MethodNum</span><br><span class="line">CurrentTotalPower        abi.MethodNum</span><br><span class="line">&#125;&#123;MethodConstructor, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MethodsMiner = <span class="keyword">struct</span> &#123;</span><br><span class="line">Constructor              abi.MethodNum</span><br><span class="line">ControlAddresses         abi.MethodNum</span><br><span class="line">ChangeWorkerAddress      abi.MethodNum</span><br><span class="line">ChangePeerID             abi.MethodNum</span><br><span class="line">SubmitWindowedPoSt       abi.MethodNum</span><br><span class="line">PreCommitSector          abi.MethodNum</span><br><span class="line">ProveCommitSector        abi.MethodNum</span><br><span class="line">ExtendSectorExpiration   abi.MethodNum</span><br><span class="line">TerminateSectors         abi.MethodNum</span><br><span class="line">DeclareFaults            abi.MethodNum</span><br><span class="line">DeclareFaultsRecovered   abi.MethodNum</span><br><span class="line">OnDeferredCronEvent      abi.MethodNum</span><br><span class="line">CheckSectorProven        abi.MethodNum</span><br><span class="line">ApplyRewards             abi.MethodNum</span><br><span class="line">ReportConsensusFault     abi.MethodNum</span><br><span class="line">WithdrawBalance          abi.MethodNum</span><br><span class="line">ConfirmSectorProofsValid abi.MethodNum</span><br><span class="line">ChangeMultiaddrs         abi.MethodNum</span><br><span class="line">CompactPartitions        abi.MethodNum</span><br><span class="line">CompactSectorNumbers     abi.MethodNum</span><br><span class="line">ConfirmUpdateWorkerKey   abi.MethodNum</span><br><span class="line">RepayDebt                abi.MethodNum</span><br><span class="line">ChangeOwnerAddress       abi.MethodNum</span><br><span class="line">DisputeWindowedPoSt      abi.MethodNum</span><br><span class="line">&#125;&#123;MethodConstructor, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MethodsVerifiedRegistry = <span class="keyword">struct</span> &#123;</span><br><span class="line">Constructor       abi.MethodNum</span><br><span class="line">AddVerifier       abi.MethodNum</span><br><span class="line">RemoveVerifier    abi.MethodNum</span><br><span class="line">AddVerifiedClient abi.MethodNum</span><br><span class="line">UseBytes          abi.MethodNum</span><br><span class="line">RestoreBytes      abi.MethodNum</span><br><span class="line">&#125;&#123;MethodConstructor, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>支付通道相关</title>
    <link href="http://example.com/%E6%94%AF%E4%BB%98%E9%80%9A%E9%81%93%E7%9B%B8%E5%85%B3/"/>
    <id>http://example.com/%E6%94%AF%E4%BB%98%E9%80%9A%E9%81%93%E7%9B%B8%E5%85%B3/</id>
    <published>2021-03-24T03:29:13.587Z</published>
    <updated>2021-03-24T03:29:15.558Z</updated>
    
    <content type="html"><![CDATA[<p>在Filecoin这个市场上，矿工是主要角色。当矿工希望提供存储服务时，需要做以下几件事：</p><p>1）存储矿工在网络登记（在Filecoin节点上执行创建矿工的指令），这时，Filecoin的链上会增加相应矿工的角色。</p><p>2）存储矿工承诺可使用的存储空间并进行质押，这即是承诺质押（Pledge Collateral）。</p><p>3）存储矿工挂单，声明单位存储的价格，并声明这个价格的有效期为多久。</p><p>4）之后，存储用户可以询问网络，目前有哪些矿工在提供服务。</p><p>5）经过比较，选定一个矿工，并提出交易要求。</p><p>6）存储矿工收到交易申请，回复并达成交易。</p><p>交易达成虽然只有一条指令，但其中涉及到很多细节。大致包括如下方面：</p><p>查询区块链，查看是否指令中涉及到的矿工及其挂单是否有效；有效则继续，无效返回错误；</p><p>连接矿工所在节点，如果不能连接，返回错误，能够连接，继续；</p><p>等待矿工返回同意存储申请；</p><p>传输需要存储的文件给矿工；</p><p>创建支付通道，客户付费给支付通道（注意，不是直接付给矿工）；V丨FILkefu</p><p>矿工接收完数据，开始做封装（Seal）；</p><p>矿工封装完成，验证数据保存完整；</p><p>在存储交易要求的区间内，矿工持续证明存储完好，并从支付通道获得报酬。</p><p><img src="https://beenews-group.oss-cn-shanghai.aliyuncs.com/b53731a8dadfc4a5fa9037d90f3e1230.jpg" alt="img"></p><p>为什么Filecoin存储客户是付费给支付通道而不是矿工呢？那，支付通道又是什么？</p><p>支付通道在这个网络中是一个很关键的角色，注意，是个角色。当然，矿工在网络中也是一个角色。我们可以把支付通道看成是一个人，实际上它是一个智能合约，当客户申请交易时，此智能合约自动建立，并在之后自动执行。</p><p>也就是说，客户的费用是付给了智能合约，而智能合约只在矿工能够成功证明自己持续保有数据的情况下，才会付费给矿工。矿工的所有存储收费不是直接来自用户，而是来自支付通道。</p><p>Filecoin直接在链上实现支付通道。当然，一种最简单的方式就是对一个文件的存储就创建一个支付通道，也就是说运行一个智能合约。这看起来简单，实现容易，但是，当Filecoin网络规模变大的时候，区块链上的支付通道将变得过多，反复执行，交易量将会很大，使得整个网络的交易速率下降，出现拥塞。这对于区块链而言并不陌生，Filecoin似乎也不可避免。</p><p>有没有更好的办法呢？当然有，既然实现支付通道，为什么不实现链下交易。很多小额交易完全可以链下进行，通过双方签名，达到一定额度上链即可。</p><p>另一个办法，一个用户可能会信任几个特定的矿工，那么他们的交易会很多，系统可以提供一种支付通道归并的方式，来实现多个通道统一一次性交易，这样将大大减少交易信息量和实际交易量。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在Filecoin这个市场上，矿工是主要角色。当矿工希望提供存储服务时，需要做以下几件事：&lt;/p&gt;
&lt;p&gt;1）存储矿工在网络登记（在Filecoin节点上执行创建矿工的指令），这时，Filecoin的链上会增加相应矿工的角色。&lt;/p&gt;
&lt;p&gt;2）存储矿工承诺可使用的存储空间</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构和算法</title>
    <link href="http://example.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    <id>http://example.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/</id>
    <published>2021-03-21T15:22:10.000Z</published>
    <updated>2021-03-23T14:06:06.714Z</updated>
    
    <content type="html"><![CDATA[<h3 id="算法基本概念"><a href="#算法基本概念" class="headerlink" title="算法基本概念"></a>算法基本概念</h3><h4 id="什么是数据结构"><a href="#什么是数据结构" class="headerlink" title="什么是数据结构"></a>什么是数据结构</h4><p>存储数据的不同方式</p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200702085618959.png" alt="image-20200702085618959"></p><p>-Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true</p><h4 id="什么是算法"><a href="#什么是算法" class="headerlink" title="什么是算法"></a>什么是算法</h4><p>同一问题的不同解决方法</p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200702090637483.png" alt="image-20200702090637483"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200702092331879.png" alt="image-20200702092331879"></p><p>算法往往是针对特定的数据结构的</p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200620220830038.png" alt="image-20200620220830038"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200620220955313.png" alt="image-20200620220955313"></p><p>时间复杂度</p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200620221324764.png" alt="image-20200620221324764"></p><p>1.计算偏移量</p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200620221702944.png" alt="image-20200620221702944"></p><h3 id="排序算法-宋词记忆法"><a href="#排序算法-宋词记忆法" class="headerlink" title="排序算法-宋词记忆法"></a>排序算法-宋词记忆法</h3><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200620222745237.png" alt="image-20200620222745237"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200620222324398.png" alt="image-20200620222324398"></p><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200620222649170.png" alt="image-20200620222649170"></p><p><strong>找最小往前排，记录最小值位置，交换最小值，记第一个值为最小值</strong></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621160829530.png" alt="image-20200621160829530"></p><h3 id="选择排序——程序编写"><a href="#选择排序——程序编写" class="headerlink" title="选择排序——程序编写"></a>选择排序——程序编写</h3><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621162828118.png" alt="image-20200621162828118"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621163404895.png" alt="image-20200621163404895"></p><h3 id="选择排序大O分析"><a href="#选择排序大O分析" class="headerlink" title="选择排序大O分析"></a>选择排序大O分析</h3><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621170424890.png" alt="image-20200621170424890"></p><h3 id="选择排序结尾"><a href="#选择排序结尾" class="headerlink" title="选择排序结尾"></a>选择排序结尾</h3><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621170410368.png" alt="image-20200621170410368"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621170844978.png" alt="image-20200621170844978"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621170901475.png" alt="image-20200621170901475"></p><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><p><strong>单个比较，大则交换，放到最后位置</strong></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621213851937.png" alt="image-20200621213851937"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621214058933.png" alt="image-20200621214058933"></p><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621214842910.png" alt="image-20200621214842910"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621215001639.png" alt="image-20200621215001639"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621215247245.png" alt="image-20200621215247245"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621215348522.png" alt="image-20200621215348522"></p><h3 id="总结简单排序-选择、冒泡、插入"><a href="#总结简单排序-选择、冒泡、插入" class="headerlink" title="总结简单排序-选择、冒泡、插入"></a>总结简单排序-选择、冒泡、插入</h3><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621215731901.png" alt="image-20200621215731901"></p><h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200621222912004.png" alt="image-20200621222912004"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200622221544217.png" alt="image-20200622221544217"></p><p>间隔为4的排序直到间隔为1</p><p>间隔大交换次数少，间隔小。。短。</p><p>给定间隔跳排，然后缩小间隔直到为1。</p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200622083122566.png" alt="image-20200622083122566"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200622083228031.png" alt="image-20200622083228031"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200622083255427.png" alt="image-20200622083255427"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200622083458533.png" alt="image-20200622083458533"></p><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><h4 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h4><h4 id="归并一"><a href="#归并一" class="headerlink" title="归并一"></a>归并一</h4><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200622085708604.png" alt="image-20200622085708604"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200622091454212.png" alt="image-20200622091454212"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200622094242400.png" alt="image-20200622094242400"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200622094455729.png" alt="image-20200622094455729">优化</p><h4 id="归并二"><a href="#归并二" class="headerlink" title="归并二"></a>归并二</h4><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200622100704295.png" alt="image-20200622100704295"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200622101132300.png" alt="image-20200622101132300"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200622101414392.png" alt="image-20200622101414392"></p><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623091130041.png" alt="image-20200623091130041"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623091243208.png" alt="image-20200623091243208"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623092051331.png" alt="image-20200623092051331"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623093255007.png" alt="image-20200623093255007"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623094051043.png" alt="image-20200623094051043"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623094308062.png" alt="image-20200623094308062"></p><p>while（left&lt;=right）</p><h3 id="双轴快排"><a href="#双轴快排" class="headerlink" title="双轴快排"></a>双轴快排</h3><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623115616836.png" alt="image-20200623115616836"></p><h3 id="计数排序"><a href="#计数排序" class="headerlink" title="计数排序"></a>计数排序</h3><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623115920143.png" alt="image-20200623115920143"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623120024936.png" alt="image-20200623120024936"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623154710311.png" alt="image-20200623154710311"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623155446227.png" alt="image-20200623155446227"></p><h3 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h3><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623160622239.png" alt="image-20200623160622239"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623160643382.png" alt="image-20200623160643382"></p><p>个位数一样放一个桶，十位数一样一个桶，以此类推。</p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623161105621.png" alt="image-20200623161105621"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623161303281.png" alt="image-20200623161303281"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623161339600.png" alt="image-20200623161339600"></p><h3 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h3><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623161932032.png" alt="image-20200623161932032"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623162231745.png" alt="image-20200623162231745"></p><p>掌握计数和基数</p><h3 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h3><h4 id="题目一"><a href="#题目一" class="headerlink" title="题目一"></a>题目一</h4><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623162551528.png" alt="image-20200623162551528"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623163948067.png" alt="image-20200623163948067"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623164006485.png" alt="image-20200623164006485"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623164230704.png" alt="image-20200623164230704"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623164317452.png" alt="image-20200623164317452"></p><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623164410692.png" alt="image-20200623164410692"></p><h4 id="题目二"><a href="#题目二" class="headerlink" title="题目二"></a>题目二</h4><p><img src="C:\Users\李德\AppData\Roaming\Typora\typora-user-images\image-20200623165911943.png" alt="image-20200623165911943"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;算法基本概念&quot;&gt;&lt;a href=&quot;#算法基本概念&quot; class=&quot;headerlink&quot; title=&quot;算法基本概念&quot;&gt;&lt;/a&gt;算法基本概念&lt;/h3&gt;&lt;h4 id=&quot;什么是数据结构&quot;&gt;&lt;a href=&quot;#什么是数据结构&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>linux命令大全</title>
    <link href="http://example.com/linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8-1/"/>
    <id>http://example.com/linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8-1/</id>
    <published>2021-03-21T15:20:45.000Z</published>
    <updated>2021-03-21T15:23:50.297Z</updated>
    
    <content type="html"><![CDATA[<h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><p>绝对路径：/…/…  相对路径：./ 表示当前目录，../表示上一级目录</p><p>/表示根目录</p><p>/bin目录（/usr/.bin:可执行二进制文件的目录)：存放工具</p><p>/home:<del>表示当前用户的家目录，如：</del>moyu表示edu的家目录</p><p>/etc:存配置文件 /dev:设备文件，挂载光驱</p><p>/lib（/usr/lib）（/usr/local/lib）:存库函数</p><h3 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h3><p>drwxr-xr-x:以d开头的为目录文件，以-开头的为普通文件，b\c开头的为设备文件(主要在/dev)，l开头的为link链接文件（快捷方式)</p><p>文件的权限很重要，如：drwxr-xr-x moyu root</p><p>红色的区别文件类型，黄色的为：文件所有者权限，绿色的为用户组权限，紫色的为其他用户权限,这里的moyu为文件所有者，root为用户组。</p><p><strong>命令</strong>：</p><p><strong>whoami</strong> 查询当前用户</p><p><strong>cat</strong> 查看群号：cat /etc/group 查看所有用户组，里面的x:0，数字为用户组（群）号</p><p>cat /etc/passwd 查看所有用户，里面的x:1001，数字为用户号</p><p>如：给stdio.h其他用户分配写的权限 sudo chmod o+w stdio.h </p><p>其中(u/g/o/a)分别表示文件所有者/群组/其他人/所有权限，（+、-、=表示添加，减少，赋予相关权限）</p><p>修改文件所有者:<strong>chown</strong></p><p>chown 用户名 文件或目录名</p><p>修改文件所有组：<strong>chgrp</strong></p><p>chgrp 用户组 文件或目录名</p><p>cal -y 查看当年日历 </p><p>cal 年份 查看某年日历</p><p>date +%Y-%m-%d-%H:%M:%S 查看当前时间</p><h3 id="linux命令格式"><a href="#linux命令格式" class="headerlink" title="linux命令格式"></a>linux命令格式</h3><p>[ ]表示可选</p><p>command [options][parameter]</p><p>查看命令用法 –help 如：ls –help (不是所有的命令都可用–help查）</p><p>.开头的文件为隐藏文件</p><p>查使用说明：man</p><p>查询printf命令，man 1 printf,其中1代表系统命令，man 3 printf ,3代表库函数里面的</p><p>history查看历史命令</p><p><strong>ls</strong>参数：-a显示所有文件，包括隐藏文件</p><p>-l表示以列表方式显示文件的详细信息</p><p>-h表示配合-l以人性化方式显示文件大小</p><p>其中ls -a -l -h和ls -lah等价</p><p>ls -l可缩写为ll</p><p><strong>-rw-rw-r– *<em>3*</em> edu edu 433 10月 13 10:47</strong> 红色部分3表示这个目录文件夹个数，默认一个文件夹下有2个文件夹：. 和..</p><p><strong>touch</strong>创建文件（不存在的新建，存在，改时间，改为当前）</p><p>ls [1-9].??? 表示匹配后缀名3个字符，文件名为1-9的文件</p><p>touch *.c 把所有的.c文件时间改为当前时间</p><p>touch *.c 创建*.c文件 其中\为转义字符</p><p>重定向：</p><p>ls /usr/include/ &gt;test.txt</p><p>把ls /usr/include/命令在屏幕上显示的内容保存到text.txt中（有的话覆盖)</p><p>ls ./ &gt;&gt;test.txt</p><p>&gt;&gt;表示不覆盖，追加到text.txt后方</p><p>cat /usr/include/stdio.h 查看文件</p><p>more分屏显示：按q退出，h帮助，空格下一页</p><p>管道 | ： ls | grep std</p><p>grep文本搜索，std为搜索条件，可以是表达式如：[1-9].c</p><p>管道：一个命令的输出可以通过管道作为另一个命令的输入</p><p>清屏 clear ，pwd显示当前路径</p><p>cd 切换工作目录， cd ~ 切换到当前用户主目录（/home/用户目录）</p><p>cd - 可进入上一个进入的目录</p><p>windows常用命令：查看目录信息:dir ，清屏：cls</p><p><strong>mkdir</strong> -p递归创建 ，如：mkdir ./a/b/c -p</p><p>./a/b/c同时创建abc目录</p><p><strong>rmdir</strong>只能删除空文件夹</p><p>rm 强大，可全删，-r表示递归删除目录下内容，删除文件夹时必须加此参数</p><p>rm 文件夹名 -r ,-f 不提示 -i提示（一般-rf）</p><p><strong>ln 建立文件链接</strong></p><p>ln 源文件 链接文件</p><p>ln -s 源文件 链接文件</p><p>-s软链接（不占内存大小）</p><p><strong>grep命令</strong></p><p>grep mike test.txt -n</p><p>grep搜索查找 查找mike关键字 test.txt表示在哪个文件里面查 -n显示行号</p><p>-i 忽略大小写，-v求反，不匹配的内容</p><p>“ “里面表示整体，比如grep “1 2 3” </p><p>^a表示以a开头 k$表示以k结尾的 .代表任意字符</p><p><strong>find</strong> 查找</p><p>find ./ -name “*.h”</p><p>./表目录，-name表示以名字查，*.h表示文件，查后缀为.h的文件</p><p>find /tmp -size +2M</p><p>查找大于2M的文件</p><p>find ./ -size 4k -size -5M</p><p>查找4k-5M大小的文件</p><p>find ./ -perm o777</p><p>查找权限为777的文件或目录</p><p><strong>cp</strong>拷贝</p><p> -a 复制目录，保留连接，文件属性 </p><p> -f 不提示  -i 提示  -r 递归复制 -v显示进度</p><p><strong>mv</strong> 移动文件</p><p>-f 不提示 -i 提示 -v进度</p><p><strong>file</strong> 查看文件类型</p><p><strong>VIM使用：</strong></p><p>复制(yank 提起):复制整行:yy</p><p>粘贴（put 放下）：p</p><p><strong>查看文件大小 du</strong></p><p>du 文件目录 -h   查看文件的大小</p><p><strong>tar打包：</strong></p><p>tar -cvf aaa.tar aa/ bb/   其中-c表示创建，v表示进度 f 表示提示 aaa.tar表示打包的包名 aa/ bb/表示要打包的文件（*b表示当前目录下所有的文件）</p><p><strong>解包：</strong></p><p>tar -xvf aaa.tar -C ../bin   其中-x表示解包，vf和上面相同， aaa.tar表示要解包的文件，-C用于指定解包的目录，后面的地址为解包的地址，（不写-C ../bin默认为当前目录）</p><p><strong>gzip压缩 （gzip后缀为.gz ; bzip2使用同理，后缀为.bz2）：</strong></p><p>gzip xxx.tar    压缩某个包，在当前目录生成</p><p>gzip -r xxx.tar xxx.tar.gz   加了-r之后，绿色的部分要写xxx.tar.gz，压缩后的文件名</p><p><strong>gzip解压：</strong></p><p>gzip -d xxx.tar.gz  解压文件，-d表示解压</p><p><strong>使用gzip一步压缩解压</strong></p><p>tar -czvf xxx.tar.gz 待打包的文件</p><p>tar -xzvf xxx.tar.gz  功能：解压文件包，后面加上-C 解压指定的目录 可以指定解压的目录</p><p>使用bzip2一步压缩解压：只需要把 z 换成 j 即可</p><p><strong>zip ，unzip 使用</strong>：主要是为了兼容windows压缩文件</p><p>zip -r test.zip *  将当前目录所有文件压缩为test.zip</p><p>unzip -d test test.zip 将test.zip解压到指定test目录，-d表示解压</p><p><strong>which</strong>查看 命令所在的目录</p><p>如：which查看ls所在的目录</p><p>创建组：groupadd 如：groupadd abc 添加组</p><p>删除组：groupdel </p><p>把角色分配到用户组 usermod -g 用户组 用户名</p><p>添加用户：useradd -d /home/abc abc -m 其中-d表示指定主目录，后面接用户目录 ，adc为用户名，-m自动创建目录（必须加）,-g moyu 可以在创建的时候指定组，这里的moyu为用户组</p><p>删除用户：userdel abc -r 其中-r表示把用户目录也删除（没有-r还要自己手动删用户目录）</p><p>sudo passwd abc 创建密码 ，adc为用户，用来指定创建谁的密码</p><p>last查看用户登录时间</p><p><strong>ps进程</strong>  ps -aux 查看进程 </p><p>ps参数： -a :所有经常 -u:详细内容 -x:没有控制终端进程 -w：加宽显示界面 -r 显示在运行的后台进程</p><p><strong>kill 杀死进程</strong> kill -9 进程号 其中-9表示强力杀死</p><p>kill 进程号 杀死进程</p><p><strong>top 动态查看进程    -m ：按内存使用排序 -p:cpu占有率  -T：按时长排序 -U:用户，后加用户名（过滤） 如： *<em>top -U moyu*</em> 显示moyu的所有进程 -K 杀死进程（后面加Pid值）</strong></p><p>sudo su -moyu 切换用户，没有红色的部分为切换为root</p><p><strong>设置后台进程：&amp;</strong></p><p>如果有一个可执行程序为test，使用 ./test &amp; 表示到后台运行它</p><p>jobs 查看后台</p><p>fg调用后台 fg 编号 这里的编号指的是jobs查看得到的编号</p><p>字符界面和图像界面切换</p><p>redhat  : init 3 切换字符界面 init 5切换图形界面</p><p>其他：快捷键切换 ctrl+alt+F3 切换字符界面 ctrl+alt+F1 切换图形界面</p><p>df查看文件所在硬盘大小 du查看大小（目录），使用一般都是命令+文件</p><h3 id="软件基本安装"><a href="#软件基本安装" class="headerlink" title="软件基本安装"></a>软件基本安装</h3><p>sudo apt-get update 更新软件</p><p>sudo apt-get install xxx 安装软件</p><p>sudo apt-get remove xxx 删除软件</p><p>rpm -ivh xxx.rpm 安装rpm程序 其中-i表示指定安装的软件包，-v表示显示安装信息,-h表示进度</p><p>ifconfig 查看ip信息</p><p>ping ip地址 查看能否ping通</p><p>远程linux-linux</p><p>ssh -l username hostip 其中username表示对方用户名 ，hostip表示目标主机ip地址</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;路径&quot;&gt;&lt;a href=&quot;#路径&quot; class=&quot;headerlink&quot; title=&quot;路径&quot;&gt;&lt;/a&gt;路径&lt;/h3&gt;&lt;p&gt;绝对路径：/…/…  相对路径：./ 表示当前目录，../表示上一级目录&lt;/p&gt;
&lt;p&gt;/表示根目录&lt;/p&gt;
&lt;p&gt;/bin目录（/usr/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
    <id>http://example.com/linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</id>
    <published>2021-03-21T08:57:19.498Z</published>
    <updated>2021-03-21T08:58:36.166Z</updated>
    
    <content type="html"><![CDATA[<h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><p>绝对路径：/…/…  相对路径：./ 表示当前目录，../表示上一级目录</p><p>/表示根目录</p><p>/bin目录（/usr/.bin:可执行二进制文件的目录)：存放工具</p><p>/home:<del>表示当前用户的家目录，如：</del>moyu表示edu的家目录</p><p>/etc:存配置文件 /dev:设备文件，挂载光驱</p><p>/lib（/usr/lib）（/usr/local/lib）:存库函数</p><h3 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h3><p>drwxr-xr-x:以d开头的为目录文件，以-开头的为普通文件，b\c开头的为设备文件(主要在/dev)，l开头的为link链接文件（快捷方式)</p><p>文件的权限很重要，如：drwxr-xr-x moyu root</p><p>红色的区别文件类型，黄色的为：文件所有者权限，绿色的为用户组权限，紫色的为其他用户权限,这里的moyu为文件所有者，root为用户组。</p><p><strong>命令</strong>：</p><p><strong>whoami</strong> 查询当前用户</p><p><strong>cat</strong> 查看群号：cat /etc/group 查看所有用户组，里面的x:0，数字为用户组（群）号</p><p>cat /etc/passwd 查看所有用户，里面的x:1001，数字为用户号</p><p>如：给stdio.h其他用户分配写的权限 sudo chmod o+w stdio.h </p><p>其中(u/g/o/a)分别表示文件所有者/群组/其他人/所有权限，（+、-、=表示添加，减少，赋予相关权限）</p><p>修改文件所有者:<strong>chown</strong></p><p>chown 用户名 文件或目录名</p><p>修改文件所有组：<strong>chgrp</strong></p><p>chgrp 用户组 文件或目录名</p><p>cal -y 查看当年日历 </p><p>cal 年份 查看某年日历</p><p>date +%Y-%m-%d-%H:%M:%S 查看当前时间</p><h3 id="linux命令格式"><a href="#linux命令格式" class="headerlink" title="linux命令格式"></a>linux命令格式</h3><p>[ ]表示可选</p><p>command [options][parameter]</p><p>查看命令用法 –help 如：ls –help (不是所有的命令都可用–help查）</p><p>.开头的文件为隐藏文件</p><p>查使用说明：man</p><p>查询printf命令，man 1 printf,其中1代表系统命令，man 3 printf ,3代表库函数里面的</p><p>history查看历史命令</p><p><strong>ls</strong>参数：-a显示所有文件，包括隐藏文件</p><p>-l表示以列表方式显示文件的详细信息</p><p>-h表示配合-l以人性化方式显示文件大小</p><p>其中ls -a -l -h和ls -lah等价</p><p>ls -l可缩写为ll</p><p><strong>-rw-rw-r– *<em>3*</em> edu edu 433 10月 13 10:47</strong> 红色部分3表示这个目录文件夹个数，默认一个文件夹下有2个文件夹：. 和..</p><p><strong>touch</strong>创建文件（不存在的新建，存在，改时间，改为当前）</p><p>ls [1-9].??? 表示匹配后缀名3个字符，文件名为1-9的文件</p><p>touch *.c 把所有的.c文件时间改为当前时间</p><p>touch *.c 创建*.c文件 其中\为转义字符</p><p>重定向：</p><p>ls /usr/include/ &gt;test.txt</p><p>把ls /usr/include/命令在屏幕上显示的内容保存到text.txt中（有的话覆盖)</p><p>ls ./ &gt;&gt;test.txt</p><p>&gt;&gt;表示不覆盖，追加到text.txt后方</p><p>cat /usr/include/stdio.h 查看文件</p><p>more分屏显示：按q退出，h帮助，空格下一页</p><p>管道 | ： ls | grep std</p><p>grep文本搜索，std为搜索条件，可以是表达式如：[1-9].c</p><p>管道：一个命令的输出可以通过管道作为另一个命令的输入</p><p>清屏 clear ，pwd显示当前路径</p><p>cd 切换工作目录， cd ~ 切换到当前用户主目录（/home/用户目录）</p><p>cd - 可进入上一个进入的目录</p><p>windows常用命令：查看目录信息:dir ，清屏：cls</p><p><strong>mkdir</strong> -p递归创建 ，如：mkdir ./a/b/c -p</p><p>./a/b/c同时创建abc目录</p><p><strong>rmdir</strong>只能删除空文件夹</p><p>rm 强大，可全删，-r表示递归删除目录下内容，删除文件夹时必须加此参数</p><p>rm 文件夹名 -r ,-f 不提示 -i提示（一般-rf）</p><p><strong>ln 建立文件链接</strong></p><p>ln 源文件 链接文件</p><p>ln -s 源文件 链接文件</p><p>-s软链接（不占内存大小）</p><p><strong>grep命令</strong></p><p>grep mike test.txt -n</p><p>grep搜索查找 查找mike关键字 test.txt表示在哪个文件里面查 -n显示行号</p><p>-i 忽略大小写，-v求反，不匹配的内容</p><p>“ “里面表示整体，比如grep “1 2 3” </p><p>^a表示以a开头 k$表示以k结尾的 .代表任意字符</p><p><strong>find</strong> 查找</p><p>find ./ -name “*.h”</p><p>./表目录，-name表示以名字查，*.h表示文件，查后缀为.h的文件</p><p>find /tmp -size +2M</p><p>查找大于2M的文件</p><p>find ./ -size 4k -size -5M</p><p>查找4k-5M大小的文件</p><p>find ./ -perm o777</p><p>查找权限为777的文件或目录</p><p><strong>cp</strong>拷贝</p><p> -a 复制目录，保留连接，文件属性 </p><p> -f 不提示  -i 提示  -r 递归复制 -v显示进度</p><p><strong>mv</strong> 移动文件</p><p>-f 不提示 -i 提示 -v进度</p><p><strong>file</strong> 查看文件类型</p><p><strong>VIM使用：</strong></p><p>复制(yank 提起):复制整行:yy</p><p>粘贴（put 放下）：p</p><p><strong>查看文件大小 du</strong></p><p>du 文件目录 -h   查看文件的大小</p><p><strong>tar打包：</strong></p><p>tar -cvf aaa.tar aa/ bb/   其中-c表示创建，v表示进度 f 表示提示 aaa.tar表示打包的包名 aa/ bb/表示要打包的文件（*b表示当前目录下所有的文件）</p><p><strong>解包：</strong></p><p>tar -xvf aaa.tar -C ../bin   其中-x表示解包，vf和上面相同， aaa.tar表示要解包的文件，-C用于指定解包的目录，后面的地址为解包的地址，（不写-C ../bin默认为当前目录）</p><p><strong>gzip压缩 （gzip后缀为.gz ; bzip2使用同理，后缀为.bz2）：</strong></p><p>gzip xxx.tar    压缩某个包，在当前目录生成</p><p>gzip -r xxx.tar xxx.tar.gz   加了-r之后，绿色的部分要写xxx.tar.gz，压缩后的文件名</p><p><strong>gzip解压：</strong></p><p>gzip -d xxx.tar.gz  解压文件，-d表示解压</p><p><strong>使用gzip一步压缩解压</strong></p><p>tar -czvf xxx.tar.gz 待打包的文件</p><p>tar -xzvf xxx.tar.gz  功能：解压文件包，后面加上-C 解压指定的目录 可以指定解压的目录</p><p>使用bzip2一步压缩解压：只需要把 z 换成 j 即可</p><p><strong>zip ，unzip 使用</strong>：主要是为了兼容windows压缩文件</p><p>zip -r test.zip *  将当前目录所有文件压缩为test.zip</p><p>unzip -d test test.zip 将test.zip解压到指定test目录，-d表示解压</p><p><strong>which</strong>查看 命令所在的目录</p><p>如：which查看ls所在的目录</p><p>创建组：groupadd 如：groupadd abc 添加组</p><p>删除组：groupdel </p><p>把角色分配到用户组 usermod -g 用户组 用户名</p><p>添加用户：useradd -d /home/abc abc -m 其中-d表示指定主目录，后面接用户目录 ，adc为用户名，-m自动创建目录（必须加）,-g moyu 可以在创建的时候指定组，这里的moyu为用户组</p><p>删除用户：userdel abc -r 其中-r表示把用户目录也删除（没有-r还要自己手动删用户目录）</p><p>sudo passwd abc 创建密码 ，adc为用户，用来指定创建谁的密码</p><p>last查看用户登录时间</p><p><strong>ps进程</strong>  ps -aux 查看进程 </p><p>ps参数： -a :所有经常 -u:详细内容 -x:没有控制终端进程 -w：加宽显示界面 -r 显示在运行的后台进程</p><p><strong>kill 杀死进程</strong> kill -9 进程号 其中-9表示强力杀死</p><p>kill 进程号 杀死进程</p><p><strong>top 动态查看进程    -m ：按内存使用排序 -p:cpu占有率  -T：按时长排序 -U:用户，后加用户名（过滤） 如： *<em>top -U moyu*</em> 显示moyu的所有进程 -K 杀死进程（后面加Pid值）</strong></p><p>sudo su -moyu 切换用户，没有红色的部分为切换为root</p><p><strong>设置后台进程：&amp;</strong></p><p>如果有一个可执行程序为test，使用 ./test &amp; 表示到后台运行它</p><p>jobs 查看后台</p><p>fg调用后台 fg 编号 这里的编号指的是jobs查看得到的编号</p><p>字符界面和图像界面切换</p><p>redhat  : init 3 切换字符界面 init 5切换图形界面</p><p>其他：快捷键切换 ctrl+alt+F3 切换字符界面 ctrl+alt+F1 切换图形界面</p><p>df查看文件所在硬盘大小 du查看大小（目录），使用一般都是命令+文件</p><h3 id="软件基本安装"><a href="#软件基本安装" class="headerlink" title="软件基本安装"></a>软件基本安装</h3><p>sudo apt-get update 更新软件</p><p>sudo apt-get install xxx 安装软件</p><p>sudo apt-get remove xxx 删除软件</p><p>rpm -ivh xxx.rpm 安装rpm程序 其中-i表示指定安装的软件包，-v表示显示安装信息,-h表示进度</p><p>ifconfig 查看ip信息</p><p>ping ip地址 查看能否ping通</p><p>远程linux-linux</p><p>ssh -l username hostip 其中username表示对方用户名 ，hostip表示目标主机ip地址</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;路径&quot;&gt;&lt;a href=&quot;#路径&quot; class=&quot;headerlink&quot; title=&quot;路径&quot;&gt;&lt;/a&gt;路径&lt;/h3&gt;&lt;p&gt;绝对路径：/…/…  相对路径：./ 表示当前目录，../表示上一级目录&lt;/p&gt;
&lt;p&gt;/表示根目录&lt;/p&gt;
&lt;p&gt;/bin目录（/usr/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/linux-commend/"/>
    <id>http://example.com/linux-commend/</id>
    <published>2021-03-21T08:19:54.834Z</published>
    <updated>2020-10-22T07:30:03.015Z</updated>
    
    <content type="html"><![CDATA[<h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><p>绝对路径：/…/…  相对路径：./ 表示当前目录，../表示上一级目录</p><p>/表示根目录</p><p>/bin目录（/usr/.bin:可执行二进制文件的目录)：存放工具</p><p>/home:<del>表示当前用户的家目录，如：</del>moyu表示edu的家目录</p><p>/etc:存配置文件 /dev:设备文件，挂载光驱</p><p>/lib（/usr/lib）（/usr/local/lib）:存库函数</p><h3 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h3><p>drwxr-xr-x:以d开头的为目录文件，以-开头的为普通文件，b\c开头的为设备文件(主要在/dev)，l开头的为link链接文件（快捷方式)</p><p>文件的权限很重要，如：drwxr-xr-x moyu root</p><p>红色的区别文件类型，黄色的为：文件所有者权限，绿色的为用户组权限，紫色的为其他用户权限,这里的moyu为文件所有者，root为用户组。</p><p><strong>命令</strong>：</p><p><strong>whoami</strong> 查询当前用户</p><p><strong>cat</strong> 查看群号：cat /etc/group 查看所有用户组，里面的x:0，数字为用户组（群）号</p><p>cat /etc/passwd 查看所有用户，里面的x:1001，数字为用户号</p><p>如：给stdio.h其他用户分配写的权限 sudo chmod o+w stdio.h </p><p>其中(u/g/o/a)分别表示文件所有者/群组/其他人/所有权限，（+、-、=表示添加，减少，赋予相关权限）</p><p>修改文件所有者:<strong>chown</strong></p><p>chown 用户名 文件或目录名</p><p>修改文件所有组：<strong>chgrp</strong></p><p>chgrp 用户组 文件或目录名</p><p>cal -y 查看当年日历 </p><p>cal 年份 查看某年日历</p><p>date +%Y-%m-%d-%H:%M:%S 查看当前时间</p><h3 id="linux命令格式"><a href="#linux命令格式" class="headerlink" title="linux命令格式"></a>linux命令格式</h3><p>[ ]表示可选</p><p>command [options][parameter]</p><p>查看命令用法 –help 如：ls –help (不是所有的命令都可用–help查）</p><p>.开头的文件为隐藏文件</p><p>查使用说明：man</p><p>查询printf命令，man 1 printf,其中1代表系统命令，man 3 printf ,3代表库函数里面的</p><p>history查看历史命令</p><p><strong>ls</strong>参数：-a显示所有文件，包括隐藏文件</p><p>-l表示以列表方式显示文件的详细信息</p><p>-h表示配合-l以人性化方式显示文件大小</p><p>其中ls -a -l -h和ls -lah等价</p><p>ls -l可缩写为ll</p><p><strong>-rw-rw-r– *<em>3*</em> edu edu 433 10月 13 10:47</strong> 红色部分3表示这个目录文件夹个数，默认一个文件夹下有2个文件夹：. 和..</p><p><strong>touch</strong>创建文件（不存在的新建，存在，改时间，改为当前）</p><p>ls [1-9].??? 表示匹配后缀名3个字符，文件名为1-9的文件</p><p>touch *.c 把所有的.c文件时间改为当前时间</p><p>touch *.c 创建*.c文件 其中\为转义字符</p><p>重定向：</p><p>ls /usr/include/ &gt;test.txt</p><p>把ls /usr/include/命令在屏幕上显示的内容保存到text.txt中（有的话覆盖)</p><p>ls ./ &gt;&gt;test.txt</p><p>&gt;&gt;表示不覆盖，追加到text.txt后方</p><p>cat /usr/include/stdio.h 查看文件</p><p>more分屏显示：按q退出，h帮助，空格下一页</p><p>管道 | ： ls | grep std</p><p>grep文本搜索，std为搜索条件，可以是表达式如：[1-9].c</p><p>管道：一个命令的输出可以通过管道作为另一个命令的输入</p><p>清屏 clear ，pwd显示当前路径</p><p>cd 切换工作目录， cd ~ 切换到当前用户主目录（/home/用户目录）</p><p>cd - 可进入上一个进入的目录</p><p>windows常用命令：查看目录信息:dir ，清屏：cls</p><p><strong>mkdir</strong> -p递归创建 ，如：mkdir ./a/b/c -p</p><p>./a/b/c同时创建abc目录</p><p><strong>rmdir</strong>只能删除空文件夹</p><p>rm 强大，可全删，-r表示递归删除目录下内容，删除文件夹时必须加此参数</p><p>rm 文件夹名 -r ,-f 不提示 -i提示（一般-rf）</p><p><strong>ln 建立文件链接</strong></p><p>ln 源文件 链接文件</p><p>ln -s 源文件 链接文件</p><p>-s软链接（不占内存大小）</p><p><strong>grep命令</strong></p><p>grep mike test.txt -n</p><p>grep搜索查找 查找mike关键字 test.txt表示在哪个文件里面查 -n显示行号</p><p>-i 忽略大小写，-v求反，不匹配的内容</p><p>“ “里面表示整体，比如grep “1 2 3” </p><p>^a表示以a开头 k$表示以k结尾的 .代表任意字符</p><p><strong>find</strong> 查找</p><p>find ./ -name “*.h”</p><p>./表目录，-name表示以名字查，*.h表示文件，查后缀为.h的文件</p><p>find /tmp -size +2M</p><p>查找大于2M的文件</p><p>find ./ -size 4k -size -5M</p><p>查找4k-5M大小的文件</p><p>find ./ -perm o777</p><p>查找权限为777的文件或目录</p><p><strong>cp</strong>拷贝</p><p> -a 复制目录，保留连接，文件属性 </p><p> -f 不提示  -i 提示  -r 递归复制 -v显示进度</p><p><strong>mv</strong> 移动文件</p><p>-f 不提示 -i 提示 -v进度</p><p><strong>file</strong> 查看文件类型</p><p><strong>VIM使用：</strong></p><p>复制(yank 提起):复制整行:yy</p><p>粘贴（put 放下）：p</p><p><strong>查看文件大小 du</strong></p><p>du 文件目录 -h   查看文件的大小</p><p><strong>tar打包：</strong></p><p>tar -cvf aaa.tar aa/ bb/   其中-c表示创建，v表示进度 f 表示提示 aaa.tar表示打包的包名 aa/ bb/表示要打包的文件（*b表示当前目录下所有的文件）</p><p><strong>解包：</strong></p><p>tar -xvf aaa.tar -C ../bin   其中-x表示解包，vf和上面相同， aaa.tar表示要解包的文件，-C用于指定解包的目录，后面的地址为解包的地址，（不写-C ../bin默认为当前目录）</p><p><strong>gzip压缩 （gzip后缀为.gz ; bzip2使用同理，后缀为.bz2）：</strong></p><p>gzip xxx.tar    压缩某个包，在当前目录生成</p><p>gzip -r xxx.tar xxx.tar.gz   加了-r之后，绿色的部分要写xxx.tar.gz，压缩后的文件名</p><p><strong>gzip解压：</strong></p><p>gzip -d xxx.tar.gz  解压文件，-d表示解压</p><p><strong>使用gzip一步压缩解压</strong></p><p>tar -czvf xxx.tar.gz 待打包的文件</p><p>tar -xzvf xxx.tar.gz  功能：解压文件包，后面加上-C 解压指定的目录 可以指定解压的目录</p><p>使用bzip2一步压缩解压：只需要把 z 换成 j 即可</p><p><strong>zip ，unzip 使用</strong>：主要是为了兼容windows压缩文件</p><p>zip -r test.zip *  将当前目录所有文件压缩为test.zip</p><p>unzip -d test test.zip 将test.zip解压到指定test目录，-d表示解压</p><p><strong>which</strong>查看 命令所在的目录</p><p>如：which查看ls所在的目录</p><p>创建组：groupadd 如：groupadd abc 添加组</p><p>删除组：groupdel </p><p>把角色分配到用户组 usermod -g 用户组 用户名</p><p>添加用户：useradd -d /home/abc abc -m 其中-d表示指定主目录，后面接用户目录 ，adc为用户名，-m自动创建目录（必须加）,-g moyu 可以在创建的时候指定组，这里的moyu为用户组</p><p>删除用户：userdel abc -r 其中-r表示把用户目录也删除（没有-r还要自己手动删用户目录）</p><p>sudo passwd abc 创建密码 ，adc为用户，用来指定创建谁的密码</p><p>last查看用户登录时间</p><p><strong>ps进程</strong>  ps -aux 查看进程 </p><p>ps参数： -a :所有经常 -u:详细内容 -x:没有控制终端进程 -w：加宽显示界面 -r 显示在运行的后台进程</p><p><strong>kill 杀死进程</strong> kill -9 进程号 其中-9表示强力杀死</p><p>kill 进程号 杀死进程</p><p><strong>top 动态查看进程    -m ：按内存使用排序 -p:cpu占有率  -T：按时长排序 -U:用户，后加用户名（过滤） 如： *<em>top -U moyu*</em> 显示moyu的所有进程 -K 杀死进程（后面加Pid值）</strong></p><p>sudo su -moyu 切换用户，没有红色的部分为切换为root</p><p><strong>设置后台进程：&amp;</strong></p><p>如果有一个可执行程序为test，使用 ./test &amp; 表示到后台运行它</p><p>jobs 查看后台</p><p>fg调用后台 fg 编号 这里的编号指的是jobs查看得到的编号</p><p>字符界面和图像界面切换</p><p>redhat  : init 3 切换字符界面 init 5切换图形界面</p><p>其他：快捷键切换 ctrl+alt+F3 切换字符界面 ctrl+alt+F1 切换图形界面</p><p>df查看文件所在硬盘大小 du查看大小（目录），使用一般都是命令+文件</p><h3 id="软件基本安装"><a href="#软件基本安装" class="headerlink" title="软件基本安装"></a>软件基本安装</h3><p>sudo apt-get update 更新软件</p><p>sudo apt-get install xxx 安装软件</p><p>sudo apt-get remove xxx 删除软件</p><p>rpm -ivh xxx.rpm 安装rpm程序 其中-i表示指定安装的软件包，-v表示显示安装信息,-h表示进度</p><p>ifconfig 查看ip信息</p><p>ping ip地址 查看能否ping通</p><p>远程linux-linux</p><p>ssh -l username hostip 其中username表示对方用户名 ，hostip表示目标主机ip地址</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;路径&quot;&gt;&lt;a href=&quot;#路径&quot; class=&quot;headerlink&quot; title=&quot;路径&quot;&gt;&lt;/a&gt;路径&lt;/h3&gt;&lt;p&gt;绝对路径：/…/…  相对路径：./ 表示当前目录，../表示上一级目录&lt;/p&gt;
&lt;p&gt;/表示根目录&lt;/p&gt;
&lt;p&gt;/bin目录（/usr/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>article title</title>
    <link href="http://example.com/article-title/"/>
    <id>http://example.com/article-title/</id>
    <published>2021-03-13T06:18:11.000Z</published>
    <updated>2021-03-13T06:18:11.096Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/hello-world/"/>
    <id>http://example.com/hello-world/</id>
    <published>2021-03-13T01:08:15.209Z</published>
    <updated>2021-03-13T01:08:15.210Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
